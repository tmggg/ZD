<UserControl x:Class="SgS.View.EngineerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="clr-namespace:SgS.Behavior"
             xmlns:cv="clr-namespace:SgS.Coverter"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:interactivity="https://handyorg.github.io/handycontrol"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="EngineerViewWindow"
             d:DesignHeight="1450"
             d:DesignWidth="900"
             Background="Transparent"
             DataContext="{Binding EngineerViewModel, Source={StaticResource Locator}}"
             mc:Ignorable="d">

    <UserControl.Resources>
        <cv:MultiConverter x:Key="MultiConverter" />
        <Style x:Key="MiddleTextBlock" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard Storyboard="{StaticResource Loading}" />
        </EventTrigger>
        <!--<EventTrigger SourceName="CloseButton" RoutedEvent="Button.Click">
            <BeginStoryboard Storyboard="{StaticResource Closing}"  />
        </EventTrigger>-->
    </UserControl.Triggers>

    <Border Padding="0" Background="Transparent">
        <interactivity:Interaction.Triggers>

            <!--<hc:RoutedEventTrigger RoutedEvent="hc:TabItem.Closing">
                    <hc:EventToCommand Command="{Binding ClosingCmd}"
                                       PassEventArgsToCommand="True" />
        </hc:RoutedEventTrigger>-->

            <!--<interactivity:EventTrigger EventName="LostFocus">
                <interactivity:EventToCommand
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding ElementName=Login}" />
            </interactivity:EventTrigger>-->
        </interactivity:Interaction.Triggers>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--<interactivity:Interaction.Triggers>
                <interactivity:EventTrigger EventName="Loaded">
                    <interactivity:InvokeCommandAction Command="{Binding LoadedCommand}"
                                                       CommandParameter="{Binding ElementName=EngineerViewWindow}"></interactivity:InvokeCommandAction>
                </interactivity:EventTrigger>
            </interactivity:Interaction.Triggers>-->

            <!--  宽度：860  -->
            <Grid x:Name="Login"
                  Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ActualWidth}"
                  d:IsHidden="False">
                <!--<Grid x:Name="Login" Width="0">-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="28"
                           FontWeight="Bold"
                           Foreground="White"
                           Text="密码验证" />
                <!--<RepeatButton Grid.Row="0"
                              Width="30"
                              Background="#1D2837"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Top"
                              hc:BorderElement.CornerRadius="0"
                              Padding="6"
                              Visibility="Collapsed"
                              Margin="0 5 5 0"
                              Command="{Binding CloseCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"
                              Style="{StaticResource RepeatButtonDanger}"
                              hc:IconElement.Geometry="{StaticResource DeleteGeometry}">
                </RepeatButton>-->

                <StackPanel Grid.Row="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Vertical">
                    <TextBlock Margin="0,0,0,10"
                               HorizontalAlignment="Center"
                               FontSize="24"
                               FontWeight="Bold"
                               Foreground="White"
                               Text="请输入密码" />
                    <interactivity:PasswordBox x:Name="PinBox"
                                               Margin="0,10,0,10"
                                               HorizontalContentAlignment="Center">
                        <i:Interaction.Behaviors>
                            <b:PasswordBoxDoubleClickBehavior />
                        </i:Interaction.Behaviors>
                    </interactivity:PasswordBox>
                    <Button x:Name="OkButton"
                            Width="100"
                            Height="40"
                            Command="{Binding OkCommand}"
                            Content="确定"
                            IsDefault="True">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonPrimary}" TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#304258" />
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                        <BeginStoryboard Storyboard="{StaticResource ColorAnnimation}" />
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                        <BeginStoryboard Storyboard="{StaticResource ColorAnnimationBack}" />
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.CommandParameter>
                            <MultiBinding Converter="{x:Static cv:MultiConverter.Instance}">
                                <Binding ElementName="PinBox" />
                                <Binding ElementName="Login" />
                                <Binding ElementName="OkButton" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
            </Grid>

            <Grid Grid.Column="1" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="24"
                           FontWeight="Bold"
                           Foreground="White"
                           Text="设备参数设置" />
                <StackPanel>
                    <RepeatButton Grid.Row="0"
                                  Width="30"
                                  Margin="0,5,40,0"
                                  Padding="6"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  interactivity:BorderElement.CornerRadius="0"
                                  interactivity:IconElement.Geometry="{StaticResource SaveGeometry}"
                                  Background="#1D2837"
                                  Command="{Binding CloseCommand}"
                                  CommandParameter="{Binding ElementName=Login}"
                                  Style="{StaticResource RepeatButtonDanger}" />
                </StackPanel>
                <RepeatButton Grid.Row="0"
                              Width="30"
                              Margin="0,5,5,0"
                              Padding="6"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Top"
                              interactivity:BorderElement.CornerRadius="0"
                              interactivity:IconElement.Geometry="{StaticResource CloseGeometry}"
                              interactivity:IconElement.Width="35"
                              Background="#1D2837"
                              Command="{Binding CancelCommand}"
                              CommandParameter="{Binding ElementName=Login}"
                              Style="{StaticResource RepeatButtonDanger}" />
                <!--<RepeatButton Grid.Row="0"
                              Width="30"
                              Visibility="Collapsed"
                              HorizontalAlignment="Right"
                              Background="#1D2837"
                              Padding="6"
                              hc:BorderElement.CornerRadius="0"
                              VerticalAlignment="Top"
                              Margin="0 5 5 0"
                              Command="{Binding CloseCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"
                              Style="{StaticResource RepeatButtonDanger}"
                              hc:IconElement.Geometry="{StaticResource DeleteGeometry}">
                </RepeatButton>-->
                <!--<Border Background="#1D2837"
                        Grid.Row="2"
                        Grid.RowSpan="2"></Border>
                <Border Background="#293547"
                        Grid.Row="2"
                        Grid.RowSpan="2"
                        Margin="2 5 2 2"></Border>-->
                <ScrollViewer Grid.Row="1"
                              Margin="3,6,3,3"
                              Background="Transparent">
                    <ScrollViewer.Resources>
                        <Style BasedOn="{StaticResource NumericUpDownExtend}" TargetType="{x:Type interactivity:NumericUpDown}">
                            <Setter Property="Width" Value="68" />
                            <Setter Property="BorderBrush" Value="{StaticResource GridLineBrush}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                        <!--<Style TargetType="hc:ComboBox"
                               BasedOn="{StaticResource ComboBoxExtend}">
                            <Setter Property="Foreground"
                                    Value="White"></Setter>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource GridLineBrush}"></Setter>
                            <Setter Property="Background"
                                    Value="Transparent"></Setter>
                        </Style>-->
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="White" />
                        </Style>
                        <Style BasedOn="{StaticResource TextBoxExtend}" TargetType="{x:Type TextBox}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="{StaticResource GridLineBrush}" />
                        </Style>
                        <Style TargetType="{x:Type interactivity:ComboBox}">
                            <Setter Property="Width" Value="140" />
                            <Setter Property="BorderBrush" Value="{StaticResource GridLineBrush}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="StoryboardHidden">
                                                <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                    Storyboard.TargetProperty="Margin"
                                                                    To="9,0,0,4"
                                                                    Duration="0" />
                                            </Storyboard>
                                            <Storyboard x:Key="StoryboardShow">
                                                <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                    Storyboard.TargetProperty="Margin"
                                                                    To="9,0,0,-18"
                                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" MinWidth="30" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid.RowDefinitions>
                                            <StackPanel Grid.ColumnSpan="2"
                                                        Margin="{TemplateBinding Padding}"
                                                        Orientation="Horizontal">
                                                <StackPanel.Visibility>
                                                    <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <interactivity:String2VisibilityConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </StackPanel.Visibility>
                                                <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                <ContentPresenter Margin="4,0,0,0"
                                                                  Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                  TextElement.Foreground="{DynamicResource DangerBrush}">
                                                    <ContentPresenter.Visibility>
                                                        <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <BooleanToVisibilityConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </ContentPresenter.Visibility>
                                                </ContentPresenter>
                                            </StackPanel>
                                            <Popup x:Name="PART_Popup"
                                                   Grid.Row="1"
                                                   Grid.Column="0"
                                                   Grid.ColumnSpan="2"
                                                   Margin="1"
                                                   AllowsTransparency="True"
                                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Placement="Bottom"
                                                   PopupAnimation="Slide">
                                                <Border x:Name="dropDownBorder"
                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                        Background="{StaticResource Bg}"
                                                        BorderBrush="{StaticResource GridLineBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                        <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas Width="0"
                                                                    Height="0"
                                                                    HorizontalAlignment="Left"
                                                                    VerticalAlignment="Top">
                                                                <Rectangle x:Name="opaqueRect"
                                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </interactivity:SimplePanel>
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                            <TextBlock x:Name="TextBlockError"
                                                       Grid.Row="1"
                                                       Grid.Column="0"
                                                       Grid.ColumnSpan="2"
                                                       Margin="9,0,0,4"
                                                       VerticalAlignment="Bottom"
                                                       FontSize="12"
                                                       Foreground="{DynamicResource DangerBrush}"
                                                       Text="{TemplateBinding ErrorStr}" />
                                            <ToggleButton x:Name="toggleButton"
                                                          Grid.Row="1"
                                                          Grid.Column="0"
                                                          Grid.ColumnSpan="2"
                                                          Padding="{TemplateBinding Padding}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Background="{TemplateBinding Background}"
                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="ClickMode" Value="Press" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition />
                                                                            <ColumnDefinition Width="30" />
                                                                        </Grid.ColumnDefinitions>
                                                                        <Border Grid.ColumnSpan="2"
                                                                                Background="Transparent"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                SnapsToDevicePixels="True" />
                                                                        <Path x:Name="arrow"
                                                                              Grid.Column="1"
                                                                              Margin="7"
                                                                              HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                              Fill="{TemplateBinding BorderBrush}"
                                                                              Stretch="Uniform" />
                                                                        <Border Grid.Column="0" Margin="1">
                                                                            <Border.Visibility>
                                                                                <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                    <Binding.Converter>
                                                                                        <interactivity:String2VisibilityReConverter />
                                                                                    </Binding.Converter>
                                                                                </Binding>
                                                                            </Border.Visibility>
                                                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                              Content="{TemplateBinding Content}"
                                                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                              Focusable="False"
                                                                                              RecognizesAccessKey="True"
                                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </Border>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.4" />
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <Border Grid.Row="1"
                                                    Grid.Column="0"
                                                    Margin="1,0">
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                  IsHitTestVisible="False"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Border>
                                            <Button x:Name="ButtonClear"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Width="16"
                                                    Margin="0,0,26,0"
                                                    Padding="0,6"
                                                    interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                    Command="interactivity:ControlCommands.Clear"
                                                    Foreground="{TemplateBinding BorderBrush}"
                                                    Visibility="Collapsed">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                        <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Border Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                        <ContentControl Margin="{TemplateBinding Padding}"
                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                            <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                  Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                  Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                  Fill="{TemplateBinding Foreground}"
                                                                                  SnapsToDevicePixels="True"
                                                                                  Stretch="Uniform" />
                                                                        </ContentControl>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <interactivity:SimplePanel>
                                                                                <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                    <StackPanel Margin="{TemplateBinding Padding}"
                                                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                Orientation="Horizontal">
                                                                                        <Path x:Name="PathMain"
                                                                                              Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                              Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                              Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                              Fill="{TemplateBinding Foreground}"
                                                                                              SnapsToDevicePixels="True"
                                                                                              Stretch="Uniform" />
                                                                                        <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                          Margin="6,0,0,0"
                                                                                                          VerticalAlignment="Center"
                                                                                                          Content="{TemplateBinding Content}"
                                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                          RecognizesAccessKey="True"
                                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                    </StackPanel>
                                                                                </Border>
                                                                            </interactivity:SimplePanel>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="Content" Value="{x:Null}">
                                                                                    <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                                </Trigger>
                                                                                <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                    <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                    <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type ButtonBase}">
                                                                        <Setter Property="Height" Value="30" />
                                                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                        <Setter Property="Padding" Value="10,6" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                        <Setter Property="BorderThickness" Value="0" />
                                                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type Control}">
                                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                <Setter Property="FontSize" Value="12" />
                                                                                <Setter Property="FocusVisualStyle">
                                                                                    <Setter.Value>
                                                                                        <Style>
                                                                                            <Setter Property="Control.Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate>
                                                                                                        <Rectangle RadiusX="4" RadiusY="4">
                                                                                                            <Rectangle.Style>
                                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                                    <Setter Property="Margin" Value="-2" />
                                                                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                                                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                    <Setter Property="StrokeThickness" Value="2" />
                                                                                                                    <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                </Style>
                                                                                                            </Rectangle.Style>
                                                                                                        </Rectangle>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="0.9" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Opacity" Value="0.6" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                            </Trigger>
                                            <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True" />
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                            </MultiTrigger>
                                            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                    <Condition Property="ShowClearButton" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                    <Condition Property="ShowClearButton" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                            </MultiTrigger>
                                            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsError" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                Storyboard.TargetProperty="Margin"
                                                                                To="9,0,0,-18"
                                                                                Duration="0:0:0.2" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                Storyboard.TargetProperty="Margin"
                                                                                To="9,0,0,4"
                                                                                Duration="0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ItemContainerStyle">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                    <Border x:Name="Bd"
                                                            Padding="{TemplateBinding Padding}"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            SnapsToDevicePixels="true">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected" Value="False" />
                                                                <Condition Property="IsMouseOver" Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter TargetName="Bd" Property="Background" Value="#1D2837" />
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected" Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                            <Setter Property="Foreground" Value="White" />
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type ComboBox}">
                                    <Setter Property="Height" Value="Auto" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </Grid.RowDefinitions>
                                                    <StackPanel Grid.ColumnSpan="2"
                                                                Margin="{TemplateBinding Padding}"
                                                                Orientation="Horizontal">
                                                        <StackPanel.Visibility>
                                                            <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <interactivity:String2VisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </StackPanel.Visibility>
                                                        <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentPresenter Margin="4,0,0,0"
                                                                          Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          TextElement.Foreground="{DynamicResource DangerBrush}">
                                                            <ContentPresenter.Visibility>
                                                                <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <BooleanToVisibilityConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ContentPresenter.Visibility>
                                                        </ContentPresenter>
                                                    </StackPanel>
                                                    <Popup x:Name="PART_Popup"
                                                           Grid.Row="1"
                                                           Grid.Column="0"
                                                           Grid.ColumnSpan="2"
                                                           Margin="1"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <ToggleButton x:Name="toggleButton"
                                                                  Grid.Row="1"
                                                                  Grid.Column="0"
                                                                  Grid.ColumnSpan="2"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Background="{TemplateBinding Background}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="ClickMode" Value="Press" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition />
                                                                                    <ColumnDefinition Width="30" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border Grid.ColumnSpan="2"
                                                                                        Background="{TemplateBinding Background}"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                        SnapsToDevicePixels="True" />
                                                                                <Path x:Name="arrow"
                                                                                      Grid.Column="1"
                                                                                      Margin="7"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                      Fill="{TemplateBinding BorderBrush}"
                                                                                      Stretch="Uniform" />
                                                                                <Border Grid.Column="0" Margin="1">
                                                                                    <Border.Visibility>
                                                                                        <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                            <Binding.Converter>
                                                                                                <interactivity:String2VisibilityReConverter />
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Border.Visibility>
                                                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      Focusable="False"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </Border>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <Border Grid.Row="1"
                                                            Grid.Column="0"
                                                            Margin="1,0">
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                          IsHitTestVisible="False"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                    </Trigger>
                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True" />
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                        <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="interactivity:InfoElement.Symbol" Value="●" />
                                    <Setter Property="interactivity:InfoElement.ContentHeight" Value="NaN" />
                                    <Setter Property="interactivity:InfoElement.MinContentHeight" Value="30" />
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                            <Setter Property="ItemContainerStyle">
                                                <Setter.Value>
                                                    <Style TargetType="{x:Type ComboBoxItem}">
                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                        <Setter Property="Padding" Value="10,6" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="MinHeight" Value="30" />
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                                    <Border x:Name="Bd"
                                                                            Padding="{TemplateBinding Padding}"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            SnapsToDevicePixels="True">
                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="False" />
                                                                                <Condition Property="IsMouseOver" Value="True" />
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="True" />
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                                            <Setter Property="Foreground" Value="White" />
                                                                        </MultiTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                            <Setter Property="MinHeight" Value="30" />
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                                            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                            <Setter Property="Padding" Value="8,6" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="30" />
                                                            </Grid.ColumnDefinitions>
                                                            <Popup x:Name="PART_Popup"
                                                                   Grid.ColumnSpan="2"
                                                                   Margin="1"
                                                                   AllowsTransparency="True"
                                                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Placement="Bottom"
                                                                   PopupAnimation="Slide">
                                                                <Border x:Name="dropDownBorder"
                                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                        Background="{DynamicResource RegionBrush}"
                                                                        BorderBrush="{DynamicResource BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                        <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas Width="0"
                                                                                    Height="0"
                                                                                    HorizontalAlignment="Left"
                                                                                    VerticalAlignment="Top">
                                                                                <Rectangle x:Name="opaqueRect"
                                                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </interactivity:SimplePanel>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Popup>
                                                            <ToggleButton x:Name="toggleButton"
                                                                          Grid.Column="0"
                                                                          Grid.ColumnSpan="2"
                                                                          Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                        <Setter Property="Focusable" Value="False" />
                                                                        <Setter Property="ClickMode" Value="Press" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Background="{TemplateBinding Background}"
                                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                            SnapsToDevicePixels="True">
                                                                                        <Border Width="17"
                                                                                                Margin="0,0,6,0"
                                                                                                HorizontalAlignment="Right"
                                                                                                BorderBrush="Transparent"
                                                                                                BorderThickness="1"
                                                                                                SnapsToDevicePixels="True">
                                                                                            <Path x:Name="arrow"
                                                                                                  Width="16"
                                                                                                  Height="9"
                                                                                                  HorizontalAlignment="Center"
                                                                                                  VerticalAlignment="Center"
                                                                                                  Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                                  Fill="{TemplateBinding BorderBrush}" />
                                                                                        </Border>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Opacity" Value="0.4" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <Border Grid.Column="0" Margin="1,0">
                                                                <ContentPresenter x:Name="contentPresenter"
                                                                                  Margin="{TemplateBinding Padding}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                                  IsHitTestVisible="False"
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="HasItems" Value="False">
                                                                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                            </Trigger>
                                                            <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsGrouping" Value="True" />
                                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                                <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.4" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEditable" Value="True">
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="30" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Popup x:Name="PART_Popup"
                                                                           Grid.ColumnSpan="2"
                                                                           AllowsTransparency="True"
                                                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                                           Placement="Bottom"
                                                                           PopupAnimation="Slide">
                                                                        <Border x:Name="dropDownBorder"
                                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                                Background="{DynamicResource RegionBrush}"
                                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                                BorderThickness="1"
                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                                    <Canvas Width="0"
                                                                                            Height="0"
                                                                                            HorizontalAlignment="Left"
                                                                                            VerticalAlignment="Top">
                                                                                        <Rectangle x:Name="opaqueRect"
                                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                                    </Canvas>
                                                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </interactivity:SimplePanel>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                    </Popup>
                                                                    <ToggleButton x:Name="toggleButton"
                                                                                  Grid.Column="0"
                                                                                  Grid.ColumnSpan="2"
                                                                                  Background="{TemplateBinding Background}"
                                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                                        <ToggleButton.Style>
                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Focusable" Value="False" />
                                                                                <Setter Property="ClickMode" Value="Press" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                            <Border Background="{TemplateBinding Background}"
                                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                    SnapsToDevicePixels="True">
                                                                                                <Border Width="17"
                                                                                                        Margin="0,0,6,0"
                                                                                                        HorizontalAlignment="Right"
                                                                                                        BorderBrush="Transparent"
                                                                                                        BorderThickness="1"
                                                                                                        SnapsToDevicePixels="True">
                                                                                                    <Path x:Name="arrow"
                                                                                                          Width="16"
                                                                                                          Height="9"
                                                                                                          HorizontalAlignment="Center"
                                                                                                          VerticalAlignment="Center"
                                                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                                          Fill="{TemplateBinding BorderBrush}" />
                                                                                                </Border>
                                                                                            </Border>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                                </Trigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ToggleButton.Style>
                                                                    </ToggleButton>
                                                                    <Border Grid.Column="0" Margin="-1,1">
                                                                        <TextBox x:Name="PART_EditableTextBox"
                                                                                 Padding="{TemplateBinding Padding}"
                                                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                 Background="{TemplateBinding Background}"
                                                                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                                            <TextBox.Style>
                                                                                <Style TargetType="{x:Type TextBox}">
                                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                    <Setter Property="AllowDrop" Value="True" />
                                                                                    <Setter Property="MinWidth" Value="0" />
                                                                                    <Setter Property="MinHeight" Value="0" />
                                                                                    <Setter Property="Padding" Value="10,6" />
                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                                <ScrollViewer x:Name="PART_ContentHost"
                                                                                                              Padding="{TemplateBinding Padding}"
                                                                                                              Background="Transparent"
                                                                                                              Focusable="False"
                                                                                                              HorizontalScrollBarVisibility="Hidden"
                                                                                                              VerticalScrollBarVisibility="Hidden" />
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </TextBox.Style>
                                                                        </TextBox>
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="HasItems" Value="False">
                                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                                    </Trigger>
                                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsGrouping" Value="True" />
                                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                                    </MultiTrigger>
                                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                                    </Trigger>
                                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                    </MultiTrigger>
                                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Style.BasedOn>
                                    <Style.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEditable" Value="False" />
                                                <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                                        <Grid x:Name="templateRoot"
                                                              MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                              SnapsToDevicePixels="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="30" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.Height>
                                                                <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <interactivity:Double2GridLengthConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Grid.Height>
                                                            <StackPanel Margin="0,7,6,7"
                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                        Orientation="Horizontal">
                                                                <StackPanel.Visibility>
                                                                    <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                        <Binding.Converter>
                                                                            <interactivity:String2VisibilityConverter />
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </StackPanel.Visibility>
                                                                <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <ContentPresenter Margin="4,0,0,0"
                                                                                  Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                  TextElement.Foreground="{DynamicResource DangerBrush}">
                                                                    <ContentPresenter.Visibility>
                                                                        <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                            <Binding.Converter>
                                                                                <BooleanToVisibilityConverter />
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </ContentPresenter.Visibility>
                                                                </ContentPresenter>
                                                            </StackPanel>
                                                            <Popup x:Name="PART_Popup"
                                                                   Grid.Column="1"
                                                                   Grid.ColumnSpan="2"
                                                                   Margin="1"
                                                                   AllowsTransparency="True"
                                                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Placement="Bottom"
                                                                   PopupAnimation="Slide">
                                                                <Border x:Name="dropDownBorder"
                                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                        Background="{DynamicResource RegionBrush}"
                                                                        BorderBrush="{DynamicResource BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                        <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas Width="0"
                                                                                    Height="0"
                                                                                    HorizontalAlignment="Left"
                                                                                    VerticalAlignment="Top">
                                                                                <Rectangle x:Name="opaqueRect"
                                                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </interactivity:SimplePanel>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Popup>
                                                            <ToggleButton x:Name="toggleButton"
                                                                          Grid.Column="1"
                                                                          Grid.ColumnSpan="2"
                                                                          Padding="{TemplateBinding Padding}"
                                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                        <Setter Property="Focusable" Value="False" />
                                                                        <Setter Property="ClickMode" Value="Press" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Grid>
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition />
                                                                                            <ColumnDefinition Width="30" />
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <Border Grid.ColumnSpan="2"
                                                                                                Background="{TemplateBinding Background}"
                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                SnapsToDevicePixels="True" />
                                                                                        <Path x:Name="arrow"
                                                                                              Grid.Column="1"
                                                                                              Margin="7"
                                                                                              HorizontalAlignment="Center"
                                                                                              VerticalAlignment="Center"
                                                                                              Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                              Fill="{TemplateBinding BorderBrush}"
                                                                                              Stretch="Uniform" />
                                                                                        <Border Grid.Column="0" Margin="1">
                                                                                            <Border.Visibility>
                                                                                                <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                                    <Binding.Converter>
                                                                                                        <interactivity:String2VisibilityReConverter />
                                                                                                    </Binding.Converter>
                                                                                                </Binding>
                                                                                            </Border.Visibility>
                                                                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                              Content="{TemplateBinding Content}"
                                                                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                              Focusable="False"
                                                                                                              RecognizesAccessKey="True"
                                                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                        </Border>
                                                                                    </Grid>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Opacity" Value="0.4" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <Border Grid.Column="1" Margin="1,0">
                                                                <ContentPresenter x:Name="contentPresenter"
                                                                                  Margin="{TemplateBinding Padding}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                                  IsHitTestVisible="False"
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="HasItems" Value="False">
                                                                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                            </Trigger>
                                                            <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsGrouping" Value="True" />
                                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                                <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEditable" Value="True" />
                                                <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Top" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="30" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                                            </Grid.RowDefinitions>
                                                            <StackPanel Grid.ColumnSpan="2"
                                                                        Margin="{TemplateBinding Padding}"
                                                                        Orientation="Horizontal">
                                                                <StackPanel.Visibility>
                                                                    <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                        <Binding.Converter>
                                                                            <interactivity:String2VisibilityConverter />
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </StackPanel.Visibility>
                                                                <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <ContentPresenter Margin="4,0,0,0"
                                                                                  Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                  TextElement.Foreground="{DynamicResource DangerBrush}">
                                                                    <ContentPresenter.Visibility>
                                                                        <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                            <Binding.Converter>
                                                                                <BooleanToVisibilityConverter />
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </ContentPresenter.Visibility>
                                                                </ContentPresenter>
                                                            </StackPanel>
                                                            <Popup x:Name="PART_Popup"
                                                                   Grid.Row="1"
                                                                   Grid.Column="0"
                                                                   Grid.ColumnSpan="2"
                                                                   AllowsTransparency="True"
                                                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Placement="Bottom"
                                                                   PopupAnimation="Slide">
                                                                <Border x:Name="dropDownBorder"
                                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                        Background="{DynamicResource RegionBrush}"
                                                                        BorderBrush="{DynamicResource BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                        <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas Width="0"
                                                                                    Height="0"
                                                                                    HorizontalAlignment="Left"
                                                                                    VerticalAlignment="Top">
                                                                                <Rectangle x:Name="opaqueRect"
                                                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </interactivity:SimplePanel>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Popup>
                                                            <ToggleButton x:Name="toggleButton"
                                                                          Grid.Row="1"
                                                                          Grid.Column="0"
                                                                          Grid.ColumnSpan="2"
                                                                          Padding="{TemplateBinding Padding}"
                                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                        <Setter Property="Focusable" Value="False" />
                                                                        <Setter Property="ClickMode" Value="Press" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Grid>
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition />
                                                                                            <ColumnDefinition Width="30" />
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <Border Grid.ColumnSpan="2"
                                                                                                Background="{TemplateBinding Background}"
                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                SnapsToDevicePixels="True" />
                                                                                        <Path x:Name="arrow"
                                                                                              Grid.Column="1"
                                                                                              Margin="7"
                                                                                              HorizontalAlignment="Center"
                                                                                              VerticalAlignment="Center"
                                                                                              Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                              Fill="{TemplateBinding BorderBrush}"
                                                                                              Stretch="Uniform" />
                                                                                        <Border Grid.Column="0" Margin="1">
                                                                                            <Border.Visibility>
                                                                                                <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                                    <Binding.Converter>
                                                                                                        <interactivity:String2VisibilityReConverter />
                                                                                                    </Binding.Converter>
                                                                                                </Binding>
                                                                                            </Border.Visibility>
                                                                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                              Content="{TemplateBinding Content}"
                                                                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                              Focusable="False"
                                                                                                              RecognizesAccessKey="True"
                                                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                        </Border>
                                                                                    </Grid>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Opacity" Value="0.4" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <Border x:Name="border"
                                                                    Grid.Row="1"
                                                                    Grid.Column="0"
                                                                    Margin="-1,1">
                                                                <TextBox x:Name="PART_EditableTextBox"
                                                                         Padding="{TemplateBinding Padding}"
                                                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                         Background="{TemplateBinding Background}"
                                                                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <TextBox.Style>
                                                                        <Style TargetType="{x:Type TextBox}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                            <Setter Property="AllowDrop" Value="True" />
                                                                            <Setter Property="MinWidth" Value="0" />
                                                                            <Setter Property="MinHeight" Value="0" />
                                                                            <Setter Property="Padding" Value="10,6" />
                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                        <ScrollViewer x:Name="PART_ContentHost"
                                                                                                      Padding="{TemplateBinding Padding}"
                                                                                                      Background="Transparent"
                                                                                                      Focusable="False"
                                                                                                      HorizontalScrollBarVisibility="Hidden"
                                                                                                      VerticalScrollBarVisibility="Hidden" />
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </TextBox.Style>
                                                                </TextBox>
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="HasItems" Value="False">
                                                                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                            </Trigger>
                                                            <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsGrouping" Value="True" />
                                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                            </Trigger>
                                                            <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                                    <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEditable" Value="True" />
                                                <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                                        <Grid x:Name="templateRoot"
                                                              MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                              SnapsToDevicePixels="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="30" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.Height>
                                                                <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <interactivity:Double2GridLengthConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Grid.Height>
                                                            <StackPanel Margin="0,7,6,7"
                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                        Orientation="Horizontal">
                                                                <StackPanel.Visibility>
                                                                    <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                        <Binding.Converter>
                                                                            <interactivity:String2VisibilityConverter />
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </StackPanel.Visibility>
                                                                <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <ContentPresenter Margin="4,0,0,0"
                                                                                  Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                  TextElement.Foreground="{DynamicResource DangerBrush}">
                                                                    <ContentPresenter.Visibility>
                                                                        <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                            <Binding.Converter>
                                                                                <BooleanToVisibilityConverter />
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </ContentPresenter.Visibility>
                                                                </ContentPresenter>
                                                            </StackPanel>
                                                            <Popup x:Name="PART_Popup"
                                                                   Grid.Column="1"
                                                                   Grid.ColumnSpan="2"
                                                                   AllowsTransparency="True"
                                                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Placement="Bottom"
                                                                   PopupAnimation="Slide">
                                                                <Border x:Name="dropDownBorder"
                                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                        Background="{DynamicResource RegionBrush}"
                                                                        BorderBrush="{DynamicResource BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                        <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                            <Canvas Width="0"
                                                                                    Height="0"
                                                                                    HorizontalAlignment="Left"
                                                                                    VerticalAlignment="Top">
                                                                                <Rectangle x:Name="opaqueRect"
                                                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                            </Canvas>
                                                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </interactivity:SimplePanel>
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Popup>
                                                            <ToggleButton x:Name="toggleButton"
                                                                          Grid.Column="1"
                                                                          Grid.ColumnSpan="2"
                                                                          Padding="{TemplateBinding Padding}"
                                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                        <Setter Property="Focusable" Value="False" />
                                                                        <Setter Property="ClickMode" Value="Press" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Grid>
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition />
                                                                                            <ColumnDefinition Width="30" />
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <Border Grid.ColumnSpan="2"
                                                                                                Background="{TemplateBinding Background}"
                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                SnapsToDevicePixels="True" />
                                                                                        <Path x:Name="arrow"
                                                                                              Grid.Column="1"
                                                                                              Margin="7"
                                                                                              HorizontalAlignment="Center"
                                                                                              VerticalAlignment="Center"
                                                                                              Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                              Fill="{TemplateBinding BorderBrush}"
                                                                                              Stretch="Uniform" />
                                                                                        <Border Grid.Column="0" Margin="1">
                                                                                            <Border.Visibility>
                                                                                                <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                                    <Binding.Converter>
                                                                                                        <interactivity:String2VisibilityReConverter />
                                                                                                    </Binding.Converter>
                                                                                                </Binding>
                                                                                            </Border.Visibility>
                                                                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                              Content="{TemplateBinding Content}"
                                                                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                              Focusable="False"
                                                                                                              RecognizesAccessKey="True"
                                                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                        </Border>
                                                                                    </Grid>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Opacity" Value="0.4" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <Border x:Name="border"
                                                                    Grid.Column="1"
                                                                    Margin="-1,1"
                                                                    Background="Transparent">
                                                                <TextBox x:Name="PART_EditableTextBox"
                                                                         Padding="{TemplateBinding Padding}"
                                                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                         Background="{TemplateBinding Background}"
                                                                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <TextBox.Style>
                                                                        <Style TargetType="{x:Type TextBox}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                            <Setter Property="AllowDrop" Value="True" />
                                                                            <Setter Property="MinWidth" Value="0" />
                                                                            <Setter Property="MinHeight" Value="0" />
                                                                            <Setter Property="Padding" Value="10,6" />
                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                        <ScrollViewer x:Name="PART_ContentHost"
                                                                                                      Padding="{TemplateBinding Padding}"
                                                                                                      Background="Transparent"
                                                                                                      Focusable="False"
                                                                                                      HorizontalScrollBarVisibility="Hidden"
                                                                                                      VerticalScrollBarVisibility="Hidden" />
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </TextBox.Style>
                                                                </TextBox>
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="HasItems" Value="False">
                                                                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                            </Trigger>
                                                            <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsGrouping" Value="True" />
                                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                                    <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                                    <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                            </MultiTrigger>
                                                            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Style.BasedOn>
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="False" />
                                        <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="StoryboardHidden">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                    <Storyboard x:Key="StoryboardShow">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid x:Name="templateRoot"
                                                      MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                      SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" MinWidth="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.Height>
                                                        <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <interactivity:Double2GridLengthConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Grid.Height>
                                                    <StackPanel Margin="0,7,6,7"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Orientation="Horizontal">
                                                        <StackPanel.Visibility>
                                                            <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <interactivity:String2VisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </StackPanel.Visibility>
                                                        <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentPresenter Margin="4,0,0,0"
                                                                          Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          TextElement.Foreground="{DynamicResource DangerBrush}">
                                                            <ContentPresenter.Visibility>
                                                                <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <BooleanToVisibilityConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ContentPresenter.Visibility>
                                                        </ContentPresenter>
                                                    </StackPanel>
                                                    <Popup x:Name="PART_Popup"
                                                           Grid.Column="1"
                                                           Grid.ColumnSpan="2"
                                                           Margin="1"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <TextBlock x:Name="TextBlockError"
                                                               Grid.Column="1"
                                                               Grid.ColumnSpan="2"
                                                               Margin="9,0,0,4"
                                                               VerticalAlignment="Bottom"
                                                               FontSize="12"
                                                               Foreground="{DynamicResource DangerBrush}"
                                                               Text="{TemplateBinding ErrorStr}" />
                                                    <ToggleButton x:Name="toggleButton"
                                                                  Grid.Column="1"
                                                                  Grid.ColumnSpan="2"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Background="{TemplateBinding Background}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="ClickMode" Value="Press" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition />
                                                                                    <ColumnDefinition Width="30" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border Grid.ColumnSpan="2"
                                                                                        Background="{TemplateBinding Background}"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                        SnapsToDevicePixels="True" />
                                                                                <Path x:Name="arrow"
                                                                                      Grid.Column="1"
                                                                                      Margin="7"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                      Fill="{TemplateBinding BorderBrush}"
                                                                                      Stretch="Uniform" />
                                                                                <Border Grid.Column="0" Margin="1">
                                                                                    <Border.Visibility>
                                                                                        <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                            <Binding.Converter>
                                                                                                <interactivity:String2VisibilityReConverter />
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Border.Visibility>
                                                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      Focusable="False"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </Border>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <Border Grid.Column="1" Margin="1,0">
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                          IsHitTestVisible="False"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                    <Button x:Name="ButtonClear"
                                                            Grid.Column="2"
                                                            Width="16"
                                                            Margin="0,0,26,0"
                                                            Padding="0,6"
                                                            interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                            Command="interactivity:ControlCommands.Clear"
                                                            Foreground="{TemplateBinding BorderBrush}"
                                                            Visibility="Collapsed">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <ContentControl Margin="{TemplateBinding Padding}"
                                                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                    <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                </ContentControl>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                                        <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                                    <interactivity:SimplePanel>
                                                                                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <StackPanel Margin="{TemplateBinding Padding}"
                                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                        Orientation="Horizontal">
                                                                                                <Path x:Name="PathMain"
                                                                                                      Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                                      SnapsToDevicePixels="True"
                                                                                                      Stretch="Uniform" />
                                                                                                <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                                  Margin="6,0,0,0"
                                                                                                                  VerticalAlignment="Center"
                                                                                                                  Content="{TemplateBinding Content}"
                                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                  RecognizesAccessKey="True"
                                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                            </StackPanel>
                                                                                        </Border>
                                                                                    </interactivity:SimplePanel>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="Content" Value="{x:Null}">
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                                <Setter Property="Height" Value="30" />
                                                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                                <Setter Property="Padding" Value="10,6" />
                                                                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                                <Setter Property="BorderThickness" Value="0" />
                                                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type Control}">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                        <Setter Property="FontSize" Value="12" />
                                                                                        <Setter Property="FocusVisualStyle">
                                                                                            <Setter.Value>
                                                                                                <Style>
                                                                                                    <Setter Property="Control.Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate>
                                                                                                                <Rectangle RadiusX="4" RadiusY="4">
                                                                                                                    <Rectangle.Style>
                                                                                                                        <Style TargetType="{x:Type Rectangle}">
                                                                                                                            <Setter Property="Margin" Value="-2" />
                                                                                                                            <Setter Property="Opacity" Value="0.6" />
                                                                                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                            <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                            <Setter Property="StrokeThickness" Value="2" />
                                                                                                                            <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                        </Style>
                                                                                                                    </Rectangle.Style>
                                                                                                                </Rectangle>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" Value="0.9" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                    </Trigger>
                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True" />
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                        <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsError" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,-18"
                                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,4"
                                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="True" />
                                        <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Top" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="StoryboardHidden">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                    <Storyboard x:Key="StoryboardShow">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" MinWidth="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </Grid.RowDefinitions>
                                                    <StackPanel Grid.ColumnSpan="2"
                                                                Margin="{TemplateBinding Padding}"
                                                                Orientation="Horizontal">
                                                        <StackPanel.Visibility>
                                                            <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <interactivity:String2VisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </StackPanel.Visibility>
                                                        <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentPresenter Margin="4,0,0,0"
                                                                          Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          TextElement.Foreground="{DynamicResource DangerBrush}">
                                                            <ContentPresenter.Visibility>
                                                                <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <BooleanToVisibilityConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ContentPresenter.Visibility>
                                                        </ContentPresenter>
                                                    </StackPanel>
                                                    <Popup x:Name="PART_Popup"
                                                           Grid.Row="1"
                                                           Grid.Column="0"
                                                           Grid.ColumnSpan="2"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{StaticResource Bg}"
                                                                BorderBrush="{StaticResource GridLineBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <TextBlock x:Name="TextBlockError"
                                                               Grid.Row="1"
                                                               Grid.Column="0"
                                                               Grid.ColumnSpan="2"
                                                               Margin="9,0,0,4"
                                                               VerticalAlignment="Bottom"
                                                               FontSize="12"
                                                               Foreground="{DynamicResource DangerBrush}"
                                                               Text="{TemplateBinding ErrorStr}" />
                                                    <ToggleButton x:Name="toggleButton"
                                                                  Grid.Row="1"
                                                                  Grid.Column="0"
                                                                  Grid.ColumnSpan="2"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Background="Transparent"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="ClickMode" Value="Press" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition />
                                                                                    <ColumnDefinition Width="30" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border Grid.ColumnSpan="2"
                                                                                        Background="{TemplateBinding Background}"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                        SnapsToDevicePixels="True" />
                                                                                <Path x:Name="arrow"
                                                                                      Grid.Column="1"
                                                                                      Margin="7"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                      Fill="{TemplateBinding BorderBrush}"
                                                                                      Stretch="Uniform" />
                                                                                <Border Grid.Column="0" Margin="1">
                                                                                    <Border.Visibility>
                                                                                        <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                            <Binding.Converter>
                                                                                                <interactivity:String2VisibilityReConverter />
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Border.Visibility>
                                                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      Focusable="False"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </Border>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <Border x:Name="border"
                                                            Grid.Row="1"
                                                            Grid.Column="0"
                                                            Margin="-1,1">
                                                        <TextBox x:Name="PART_EditableTextBox"
                                                                 Padding="{TemplateBinding Padding}"
                                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <TextBox.Style>
                                                                <Style TargetType="{x:Type TextBox}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                    <Setter Property="AllowDrop" Value="True" />
                                                                    <Setter Property="MinWidth" Value="0" />
                                                                    <Setter Property="MinHeight" Value="0" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="Foreground" Value="White" />
                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                <ScrollViewer x:Name="PART_ContentHost"
                                                                                              Padding="{TemplateBinding Padding}"
                                                                                              Background="Transparent"
                                                                                              Focusable="False"
                                                                                              HorizontalScrollBarVisibility="Hidden"
                                                                                              VerticalScrollBarVisibility="Hidden" />
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Border>
                                                    <Button x:Name="ButtonClear"
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            Width="16"
                                                            Margin="0,0,26,0"
                                                            Padding="0,6"
                                                            interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                            Command="interactivity:ControlCommands.Clear"
                                                            Foreground="{TemplateBinding BorderBrush}"
                                                            Visibility="Collapsed">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <ContentControl Margin="{TemplateBinding Padding}"
                                                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                    <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                </ContentControl>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                                        <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                                    <interactivity:SimplePanel>
                                                                                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <StackPanel Margin="{TemplateBinding Padding}"
                                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                        Orientation="Horizontal">
                                                                                                <Path x:Name="PathMain"
                                                                                                      Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                                      SnapsToDevicePixels="True"
                                                                                                      Stretch="Uniform" />
                                                                                                <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                                  Margin="6,0,0,0"
                                                                                                                  VerticalAlignment="Center"
                                                                                                                  Content="{TemplateBinding Content}"
                                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                  RecognizesAccessKey="True"
                                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                            </StackPanel>
                                                                                        </Border>
                                                                                    </interactivity:SimplePanel>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="Content" Value="{x:Null}">
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                                <Setter Property="Height" Value="30" />
                                                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                                <Setter Property="Padding" Value="10,6" />
                                                                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                                <Setter Property="BorderThickness" Value="0" />
                                                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type Control}">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                        <Setter Property="FontSize" Value="12" />
                                                                                        <Setter Property="FocusVisualStyle">
                                                                                            <Setter.Value>
                                                                                                <Style>
                                                                                                    <Setter Property="Control.Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate>
                                                                                                                <Rectangle RadiusX="4" RadiusY="4">
                                                                                                                    <Rectangle.Style>
                                                                                                                        <Style TargetType="{x:Type Rectangle}">
                                                                                                                            <Setter Property="Margin" Value="-2" />
                                                                                                                            <Setter Property="Opacity" Value="0.6" />
                                                                                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                            <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                            <Setter Property="StrokeThickness" Value="2" />
                                                                                                                            <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                        </Style>
                                                                                                                    </Rectangle.Style>
                                                                                                                </Rectangle>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" Value="0.9" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                    </Trigger>
                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True" />
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <Trigger Property="IsError" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,-18"
                                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,4"
                                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                        <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="True" />
                                        <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Top" />
                                        <Condition Property="AutoComplete" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="StoryboardHidden">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                    <Storyboard x:Key="StoryboardShow">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" MinWidth="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </Grid.RowDefinitions>
                                                    <StackPanel Grid.ColumnSpan="2"
                                                                Margin="{TemplateBinding Padding}"
                                                                Orientation="Horizontal">
                                                        <StackPanel.Visibility>
                                                            <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <interactivity:String2VisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </StackPanel.Visibility>
                                                        <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentPresenter Margin="4,0,0,0"
                                                                          Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          TextElement.Foreground="{DynamicResource DangerBrush}">
                                                            <ContentPresenter.Visibility>
                                                                <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <BooleanToVisibilityConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ContentPresenter.Visibility>
                                                        </ContentPresenter>
                                                    </StackPanel>
                                                    <Popup x:Name="PART_Popup"
                                                           Grid.Row="1"
                                                           Grid.Column="0"
                                                           Grid.ColumnSpan="2"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <Popup x:Name="PART_Popup_AutoComplete"
                                                           Grid.Row="1"
                                                           Grid.Column="0"
                                                           Grid.ColumnSpan="2"
                                                           AllowsTransparency="True"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide"
                                                           StaysOpen="False">
                                                        <Border x:Name="dropDownBorder_AutoComplete"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer_AutoComplete" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect_AutoComplete"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder_AutoComplete}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder_AutoComplete}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder_AutoComplete}" />
                                                                    </Canvas>
                                                                    <StackPanel x:Name="PART_AutoCompletePanel"
                                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <TextBlock x:Name="TextBlockError"
                                                               Grid.Row="1"
                                                               Grid.Column="0"
                                                               Grid.ColumnSpan="2"
                                                               Margin="9,0,0,4"
                                                               VerticalAlignment="Bottom"
                                                               FontSize="12"
                                                               Foreground="{DynamicResource DangerBrush}"
                                                               Text="{TemplateBinding ErrorStr}" />
                                                    <ToggleButton x:Name="toggleButton"
                                                                  Grid.Row="1"
                                                                  Grid.Column="0"
                                                                  Grid.ColumnSpan="2"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Background="{TemplateBinding Background}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="ClickMode" Value="Press" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition />
                                                                                    <ColumnDefinition Width="30" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border Grid.ColumnSpan="2"
                                                                                        Background="{TemplateBinding Background}"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                        SnapsToDevicePixels="True" />
                                                                                <Path x:Name="arrow"
                                                                                      Grid.Column="1"
                                                                                      Margin="7"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                      Fill="{TemplateBinding BorderBrush}"
                                                                                      Stretch="Uniform" />
                                                                                <Border Grid.Column="0" Margin="1">
                                                                                    <Border.Visibility>
                                                                                        <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                            <Binding.Converter>
                                                                                                <interactivity:String2VisibilityReConverter />
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Border.Visibility>
                                                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      Focusable="False"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </Border>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <Border x:Name="border"
                                                            Grid.Row="1"
                                                            Grid.Column="0"
                                                            Margin="-1,1">
                                                        <TextBox x:Name="PART_EditableTextBox"
                                                                 Padding="{TemplateBinding Padding}"
                                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                 Background="{TemplateBinding Background}"
                                                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <TextBox.Style>
                                                                <Style TargetType="{x:Type TextBox}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                    <Setter Property="AllowDrop" Value="True" />
                                                                    <Setter Property="MinWidth" Value="0" />
                                                                    <Setter Property="MinHeight" Value="0" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                <ScrollViewer x:Name="PART_ContentHost"
                                                                                              Padding="{TemplateBinding Padding}"
                                                                                              Background="Transparent"
                                                                                              Focusable="False"
                                                                                              HorizontalScrollBarVisibility="Hidden"
                                                                                              VerticalScrollBarVisibility="Hidden" />
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Border>
                                                    <Button x:Name="ButtonClear"
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            Width="16"
                                                            Margin="0,0,26,0"
                                                            Padding="0,6"
                                                            interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                            Command="interactivity:ControlCommands.Clear"
                                                            Foreground="{TemplateBinding BorderBrush}"
                                                            Visibility="Collapsed">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <ContentControl Margin="{TemplateBinding Padding}"
                                                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                    <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                </ContentControl>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                                        <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                                    <interactivity:SimplePanel>
                                                                                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <StackPanel Margin="{TemplateBinding Padding}"
                                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                        Orientation="Horizontal">
                                                                                                <Path x:Name="PathMain"
                                                                                                      Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                                      SnapsToDevicePixels="True"
                                                                                                      Stretch="Uniform" />
                                                                                                <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                                  Margin="6,0,0,0"
                                                                                                                  VerticalAlignment="Center"
                                                                                                                  Content="{TemplateBinding Content}"
                                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                  RecognizesAccessKey="True"
                                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                            </StackPanel>
                                                                                        </Border>
                                                                                    </interactivity:SimplePanel>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="Content" Value="{x:Null}">
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                                <Setter Property="Height" Value="30" />
                                                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                                <Setter Property="Padding" Value="10,6" />
                                                                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                                <Setter Property="BorderThickness" Value="0" />
                                                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type Control}">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                        <Setter Property="FontSize" Value="12" />
                                                                                        <Setter Property="FocusVisualStyle">
                                                                                            <Setter.Value>
                                                                                                <Style>
                                                                                                    <Setter Property="Control.Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate>
                                                                                                                <Rectangle RadiusX="4" RadiusY="4">
                                                                                                                    <Rectangle.Style>
                                                                                                                        <Style TargetType="{x:Type Rectangle}">
                                                                                                                            <Setter Property="Margin" Value="-2" />
                                                                                                                            <Setter Property="Opacity" Value="0.6" />
                                                                                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                            <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                            <Setter Property="StrokeThickness" Value="2" />
                                                                                                                            <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                        </Style>
                                                                                                                    </Rectangle.Style>
                                                                                                                </Rectangle>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" Value="0.9" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                        <Setter TargetName="dropDownBorder_AutoComplete" Property="Height" Value="95" />
                                                    </Trigger>
                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder_AutoComplete" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder_AutoComplete" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True" />
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                    </Trigger>
                                                    <Trigger SourceName="DropDownScrollViewer_AutoComplete" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                                        <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <Trigger Property="IsError" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,-18"
                                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,4"
                                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                        <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="True" />
                                        <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="StoryboardHidden">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                    <Storyboard x:Key="StoryboardShow">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid x:Name="templateRoot"
                                                      MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                      SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" MinWidth="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.Height>
                                                        <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <interactivity:Double2GridLengthConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Grid.Height>
                                                    <StackPanel Margin="0,7,6,7"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Orientation="Horizontal">
                                                        <StackPanel.Visibility>
                                                            <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <interactivity:String2VisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </StackPanel.Visibility>
                                                        <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentPresenter Margin="4,0,0,0"
                                                                          Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          TextElement.Foreground="{DynamicResource DangerBrush}">
                                                            <ContentPresenter.Visibility>
                                                                <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <BooleanToVisibilityConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ContentPresenter.Visibility>
                                                        </ContentPresenter>
                                                    </StackPanel>
                                                    <Popup x:Name="PART_Popup"
                                                           Grid.Column="1"
                                                           Grid.ColumnSpan="2"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <TextBlock x:Name="TextBlockError"
                                                               Grid.Column="1"
                                                               Grid.ColumnSpan="2"
                                                               Margin="9,0,0,4"
                                                               VerticalAlignment="Bottom"
                                                               Foreground="{DynamicResource DangerBrush}"
                                                               Text="{TemplateBinding ErrorStr}" />
                                                    <ToggleButton x:Name="toggleButton"
                                                                  Grid.Column="1"
                                                                  Grid.ColumnSpan="2"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Background="{TemplateBinding Background}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="ClickMode" Value="Press" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition />
                                                                                    <ColumnDefinition Width="30" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border Grid.ColumnSpan="2"
                                                                                        Background="{TemplateBinding Background}"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                        SnapsToDevicePixels="True" />
                                                                                <Path x:Name="arrow"
                                                                                      Grid.Column="1"
                                                                                      Margin="7"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                      Fill="{TemplateBinding BorderBrush}"
                                                                                      Stretch="Uniform" />
                                                                                <Border Grid.Column="0" Margin="1">
                                                                                    <Border.Visibility>
                                                                                        <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                            <Binding.Converter>
                                                                                                <interactivity:String2VisibilityReConverter />
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Border.Visibility>
                                                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      Focusable="False"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </Border>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <Border x:Name="border"
                                                            Grid.Column="1"
                                                            Margin="-1,1"
                                                            Background="Transparent">
                                                        <TextBox x:Name="PART_EditableTextBox"
                                                                 Padding="{TemplateBinding Padding}"
                                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                 Background="{TemplateBinding Background}"
                                                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <TextBox.Style>
                                                                <Style TargetType="{x:Type TextBox}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                    <Setter Property="AllowDrop" Value="True" />
                                                                    <Setter Property="MinWidth" Value="0" />
                                                                    <Setter Property="MinHeight" Value="0" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                <ScrollViewer x:Name="PART_ContentHost"
                                                                                              Padding="{TemplateBinding Padding}"
                                                                                              Background="Transparent"
                                                                                              Focusable="False"
                                                                                              HorizontalScrollBarVisibility="Hidden"
                                                                                              VerticalScrollBarVisibility="Hidden" />
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Border>
                                                    <Button x:Name="ButtonClear"
                                                            Grid.Column="2"
                                                            Width="16"
                                                            Margin="0,0,26,0"
                                                            Padding="0,6"
                                                            interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                            Command="interactivity:ControlCommands.Clear"
                                                            Foreground="{TemplateBinding BorderBrush}"
                                                            Visibility="Collapsed">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <ContentControl Margin="{TemplateBinding Padding}"
                                                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                    <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                </ContentControl>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                                        <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                                    <interactivity:SimplePanel>
                                                                                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <StackPanel Margin="{TemplateBinding Padding}"
                                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                        Orientation="Horizontal">
                                                                                                <Path x:Name="PathMain"
                                                                                                      Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                                      SnapsToDevicePixels="True"
                                                                                                      Stretch="Uniform" />
                                                                                                <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                                  Margin="6,0,0,0"
                                                                                                                  VerticalAlignment="Center"
                                                                                                                  Content="{TemplateBinding Content}"
                                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                  RecognizesAccessKey="True"
                                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                            </StackPanel>
                                                                                        </Border>
                                                                                    </interactivity:SimplePanel>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="Content" Value="{x:Null}">
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                                <Setter Property="Height" Value="30" />
                                                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                                <Setter Property="Padding" Value="10,6" />
                                                                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                                <Setter Property="BorderThickness" Value="0" />
                                                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type Control}">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                        <Setter Property="FontSize" Value="12" />
                                                                                        <Setter Property="FocusVisualStyle">
                                                                                            <Setter.Value>
                                                                                                <Style>
                                                                                                    <Setter Property="Control.Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate>
                                                                                                                <Rectangle RadiusX="4" RadiusY="4">
                                                                                                                    <Rectangle.Style>
                                                                                                                        <Style TargetType="{x:Type Rectangle}">
                                                                                                                            <Setter Property="Margin" Value="-2" />
                                                                                                                            <Setter Property="Opacity" Value="0.6" />
                                                                                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                            <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                            <Setter Property="StrokeThickness" Value="2" />
                                                                                                                            <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                        </Style>
                                                                                                                    </Rectangle.Style>
                                                                                                                </Rectangle>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" Value="0.9" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                    </Trigger>
                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True" />
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <Trigger Property="IsError" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,-18"
                                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,4"
                                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                        <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEditable" Value="True" />
                                        <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                                        <Condition Property="AutoComplete" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="StoryboardHidden">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                    <Storyboard x:Key="StoryboardShow">
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid x:Name="templateRoot"
                                                      MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                      SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" MinWidth="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.Height>
                                                        <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <interactivity:Double2GridLengthConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Grid.Height>
                                                    <StackPanel Margin="0,7,6,7"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Orientation="Horizontal">
                                                        <StackPanel.Visibility>
                                                            <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <interactivity:String2VisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </StackPanel.Visibility>
                                                        <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentPresenter Margin="4,0,0,0"
                                                                          Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                          TextElement.Foreground="{DynamicResource DangerBrush}">
                                                            <ContentPresenter.Visibility>
                                                                <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <BooleanToVisibilityConverter />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </ContentPresenter.Visibility>
                                                        </ContentPresenter>
                                                    </StackPanel>
                                                    <Popup x:Name="PART_Popup"
                                                           Grid.Column="1"
                                                           Grid.ColumnSpan="2"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <Popup x:Name="PART_Popup_AutoComplete"
                                                           Grid.Column="1"
                                                           Grid.ColumnSpan="2"
                                                           AllowsTransparency="True"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder_AutoComplete"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer_AutoComplete" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect_AutoComplete"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder_AutoComplete}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder_AutoComplete}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder_AutoComplete}" />
                                                                    </Canvas>
                                                                    <StackPanel x:Name="PART_AutoCompletePanel"
                                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <TextBlock x:Name="TextBlockError"
                                                               Grid.Column="1"
                                                               Grid.ColumnSpan="2"
                                                               Margin="9,0,0,4"
                                                               VerticalAlignment="Bottom"
                                                               Foreground="{DynamicResource DangerBrush}"
                                                               Text="{TemplateBinding ErrorStr}" />
                                                    <ToggleButton x:Name="toggleButton"
                                                                  Grid.Column="1"
                                                                  Grid.ColumnSpan="2"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Background="{TemplateBinding Background}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="ClickMode" Value="Press" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition />
                                                                                    <ColumnDefinition Width="30" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border Grid.ColumnSpan="2"
                                                                                        Background="{TemplateBinding Background}"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                        SnapsToDevicePixels="True" />
                                                                                <Path x:Name="arrow"
                                                                                      Grid.Column="1"
                                                                                      Margin="7"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                      Fill="{TemplateBinding BorderBrush}"
                                                                                      Stretch="Uniform" />
                                                                                <Border Grid.Column="0" Margin="1">
                                                                                    <Border.Visibility>
                                                                                        <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                            <Binding.Converter>
                                                                                                <interactivity:String2VisibilityReConverter />
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Border.Visibility>
                                                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      Focusable="False"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </Border>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <Border x:Name="border"
                                                            Grid.Column="1"
                                                            Margin="-1,1"
                                                            Background="Transparent">
                                                        <TextBox x:Name="PART_EditableTextBox"
                                                                 Padding="{TemplateBinding Padding}"
                                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                 Background="{TemplateBinding Background}"
                                                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <TextBox.Style>
                                                                <Style TargetType="{x:Type TextBox}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                    <Setter Property="AllowDrop" Value="True" />
                                                                    <Setter Property="MinWidth" Value="0" />
                                                                    <Setter Property="MinHeight" Value="0" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                <ScrollViewer x:Name="PART_ContentHost"
                                                                                              Padding="{TemplateBinding Padding}"
                                                                                              Background="Transparent"
                                                                                              Focusable="False"
                                                                                              HorizontalScrollBarVisibility="Hidden"
                                                                                              VerticalScrollBarVisibility="Hidden" />
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Border>
                                                    <Button x:Name="ButtonClear"
                                                            Grid.Column="2"
                                                            Width="16"
                                                            Margin="0,0,26,0"
                                                            Padding="0,6"
                                                            interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                            Command="interactivity:ControlCommands.Clear"
                                                            Foreground="{TemplateBinding BorderBrush}"
                                                            Visibility="Collapsed">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <ContentControl Margin="{TemplateBinding Padding}"
                                                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                    <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                </ContentControl>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                                        <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                                    <interactivity:SimplePanel>
                                                                                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <StackPanel Margin="{TemplateBinding Padding}"
                                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                        Orientation="Horizontal">
                                                                                                <Path x:Name="PathMain"
                                                                                                      Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                                      SnapsToDevicePixels="True"
                                                                                                      Stretch="Uniform" />
                                                                                                <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                                  Margin="6,0,0,0"
                                                                                                                  VerticalAlignment="Center"
                                                                                                                  Content="{TemplateBinding Content}"
                                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                  RecognizesAccessKey="True"
                                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                            </StackPanel>
                                                                                        </Border>
                                                                                    </interactivity:SimplePanel>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="Content" Value="{x:Null}">
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                                <Setter Property="Height" Value="30" />
                                                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                                <Setter Property="Padding" Value="10,6" />
                                                                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                                <Setter Property="BorderThickness" Value="0" />
                                                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type Control}">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                        <Setter Property="FontSize" Value="12" />
                                                                                        <Setter Property="FocusVisualStyle">
                                                                                            <Setter.Value>
                                                                                                <Style>
                                                                                                    <Setter Property="Control.Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate>
                                                                                                                <Rectangle RadiusX="4" RadiusY="4">
                                                                                                                    <Rectangle.Style>
                                                                                                                        <Style TargetType="{x:Type Rectangle}">
                                                                                                                            <Setter Property="Margin" Value="-2" />
                                                                                                                            <Setter Property="Opacity" Value="0.6" />
                                                                                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                            <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                            <Setter Property="StrokeThickness" Value="2" />
                                                                                                                            <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                        </Style>
                                                                                                                    </Rectangle.Style>
                                                                                                                </Rectangle>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" Value="0.9" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                        <Setter TargetName="dropDownBorder_AutoComplete" Property="Height" Value="95" />
                                                    </Trigger>
                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder_AutoComplete" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder_AutoComplete" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True" />
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                    </Trigger>
                                                    <Trigger SourceName="DropDownScrollViewer_AutoComplete" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                                        <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                            <Condition Property="ShowClearButton" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                                    </MultiTrigger>
                                                    <Trigger Property="IsError" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,-18"
                                                                                        Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                                        Storyboard.TargetProperty="Margin"
                                                                                        To="9,0,0,4"
                                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                        <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </ScrollViewer.Resources>

                    <StackPanel Margin="5,0,5,0" Orientation="Vertical">

                        <Grid Height="400">
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource ButtonPrimary}" TargetType="{x:Type Button}">
                                    <Setter Property="Width" Value="100" />
                                    <Setter Property="Height" Value="40" />
                                </Style>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="300" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0"
                                    Margin="5"
                                    BorderBrush="{StaticResource GridLineBrush}"
                                    BorderThickness="2">
                                <Grid Margin="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="2" />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <interactivity:Interaction.Triggers>
                                        <interactivity:EventTrigger EventName="PreviewMouseDown">
                                            <interactivity:EventToCommand Command="{Binding MontorCommandDown}" PassEventArgsToCommand="True" />
                                        </interactivity:EventTrigger>

                                        <interactivity:EventTrigger EventName="PreviewMouseUp">
                                            <interactivity:EventToCommand Command="{Binding MontorCommandUp}" PassEventArgsToCommand="True" />
                                        </interactivity:EventTrigger>
                                    </interactivity:Interaction.Triggers>



                                    <TextBlock Grid.ColumnSpan="2"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="电机控制"
                                               TextAlignment="Center" />

                                    <!--<Border Grid.ColumnSpan="2"
                                            Grid.RowSpan="6"
                                            BorderBrush="{StaticResource GridLineBrush}"
                                            BorderThickness="2" />-->
                                    <Border Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            Background="{StaticResource GridLineBrush}" />

                                    <Button Grid.Row="2"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="X 正转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White">

                                        <!--<Button.Style>
                                            <Style TargetType="Button"
                                                   BasedOn="{StaticResource ButtonPrimary}">
                                                <Setter Property="Background"
                                                        Value="Transparent"></Setter>
                                                <Style.Triggers>
                                                    <EventTrigger RoutedEvent="MouseEnter">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard Storyboard="{StaticResource ColorAnnimation}"></BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="MouseLeave">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ColorAnimation From="#1A7985"
                                                                        To="#293547"
                                                                        Duration="0:0:0.2"
                                                                        Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"></ColorAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>-->
                                    </Button>

                                    <Button Grid.Row="3"
                                            Grid.Column="0"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="Y 正转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White" />

                                    <Button Grid.Row="4"
                                            Grid.Column="0"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="Z1 正转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White" />

                                    <Button Grid.Row="5"
                                            Grid.Column="0"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="Z2 正转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White" />

                                    <Button Grid.Row="2"
                                            Grid.Column="1"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="X 反转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White" />

                                    <Button Grid.Row="3"
                                            Grid.Column="1"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="Y 反转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White" />

                                    <Button Grid.Row="4"
                                            Grid.Column="1"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="Z1 反转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White" />

                                    <Button Grid.Row="5"
                                            Grid.Column="1"
                                            Background="{StaticResource ButtonSelectBrush}"
                                            BorderThickness="0"
                                            Content="Z2 反转点动"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="White" />

                                </Grid>
                            </Border>

                            <Border Grid.Column="1"
                                    Margin="5"
                                    BorderBrush="{StaticResource GridLineBrush}"
                                    BorderThickness="2">
                                <Grid Margin="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="2" />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>


                                    <TextBlock Grid.ColumnSpan="2"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="导电针参数设置"
                                               TextAlignment="Center" />

                                    <Border Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            Background="{StaticResource GridLineBrush}" />

                                    <TextBlock Grid.Row="2"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="Z1 阈值"
                                               TextAlignment="Center" />

                                    <!--<hc:NumericUpDown Grid.Column="1"
                                                      Grid.Row="2"
                                                      Maximum="50000000"
                                                      Minimum="0"
                                                      Height="35"
                                                      Value="{Binding Z1_Sensitivity,Mode=TwoWay}"
                                                      Width="150" />-->

                                    <interactivity:NumericUpDown Name="Z1Value"
                                                                 Grid.Row="2"
                                                                 Grid.Column="1"
                                                                 Width="150"
                                                                 Height="35"
                                                                 Increment="1000"
                                                                 Maximum="50000000"
                                                                 Minimum="0"
                                                                 Tag="Z1阈值"
                                                                 Value="{Binding SelectedItem.Z1Value, ElementName=liquidType}">
                                        <i:Interaction.Behaviors>
                                            <b:NumericUpDownDoubleClickBehavior />
                                        </i:Interaction.Behaviors>
                                    </interactivity:NumericUpDown>

                                    <TextBlock Grid.Row="3"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="Z2 阈值"
                                               TextAlignment="Center" />

                                    <!--<hc:NumericUpDown Grid.Column="1"
                                                      Grid.Row="3"
                                                      Maximum="50000000"
                                                      Minimum="0"
                                                      Height="35"
                                                      Value="{Binding Z2_Sensitivity,Mode=TwoWay}"
                                                      Width="150" />-->

                                    <interactivity:NumericUpDown Name="Z2Value"
                                                                 Grid.Row="3"
                                                                 Grid.Column="1"
                                                                 Width="150"
                                                                 Height="35"
                                                                 Increment="1000"
                                                                 Maximum="50000000"
                                                                 Minimum="0"
                                                                 Tag="Z2阈值"
                                                                 Value="{Binding SelectedItem.Z2Value, ElementName=liquidType}">
                                        <i:Interaction.Behaviors>
                                            <b:NumericUpDownDoubleClickBehavior />
                                        </i:Interaction.Behaviors>
                                    </interactivity:NumericUpDown>

                                    <TextBlock Grid.Row="4"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="溶剂类型"
                                               TextAlignment="Center" />

                                    <StackPanel Grid.Row="4"
                                                Grid.Column="1"
                                                HorizontalAlignment="Center"
                                                Orientation="Horizontal">
                                        <interactivity:ComboBox x:Name="liquidType"
                                                                Grid.Row="4"
                                                                Grid.Column="1"
                                                                Width="110"
                                                                Height="35"
                                                                IsEditable="False"
                                                                ItemsSource="{Binding LiquidTypes}"
                                                                SelectedIndex="0">
                                            <interactivity:ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Foreground="White" Text="{Binding LiquidName}" />
                                                </DataTemplate>
                                            </interactivity:ComboBox.ItemTemplate>
                                        </interactivity:ComboBox>
                                        <RepeatButton Grid.Row="0"
                                                      Width="30"
                                                      Margin="10,0,0,1"
                                                      Padding="6"
                                                      HorizontalAlignment="Right"
                                                      interactivity:BorderElement.CornerRadius="5"
                                                      interactivity:IconElement.Geometry="{StaticResource AddGeometry}"
                                                      Background="#1D2837"
                                                      Command="{Binding AddLiquidItemCommand}"
                                                      Style="{StaticResource RepeatButtonDanger}" />




                                    </StackPanel>


                                    <TextBlock Grid.Row="5"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="Z1传感器数据"
                                               TextAlignment="Center" />

                                    <Border Grid.Row="5"
                                            Grid.Column="5"
                                            Grid.ColumnSpan="2"
                                            Width="150"
                                            Height="35"
                                            Margin="0,0,0,0"
                                            BorderBrush="{StaticResource GridLineBrush}"
                                            BorderThickness="1"
                                            CornerRadius="5">
                                        <StackPanel Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Orientation="Horizontal">
                                            <TextBlock FontSize="18"
                                                       FontWeight="Bold"
                                                       Foreground="White"
                                                       Text="{Binding Sensor_Z1}" />
                                        </StackPanel>
                                    </Border>

                                    <Border Grid.Row="6"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Width="150"
                                            Height="35"
                                            Margin="0,0,0,0"
                                            BorderBrush="{StaticResource GridLineBrush}"
                                            BorderThickness="1"
                                            CornerRadius="5">
                                        <StackPanel Margin="5,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Orientation="Horizontal">
                                            <TextBlock FontSize="18"
                                                       FontWeight="Bold"
                                                       Foreground="White"
                                                       Text="{Binding Sensor_Z2}" />
                                        </StackPanel>
                                    </Border>


                                    <TextBlock Grid.Row="6"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="Z2传感器数据"
                                               TextAlignment="Center" />

                                    <TextBlock Grid.Row="7"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="Z1下降参数"
                                               TextAlignment="Center" />

                                    <interactivity:NumericUpDown Name="Z1DownValue"
                                                                 Grid.Row="7"
                                                                 Grid.Column="1"
                                                                 Width="150"
                                                                 Height="35"
                                                                 Maximum="0"
                                                                 Minimum="-200000"
                                                                 Tag="Z1下降参数"
                                                                 Value="{Binding Z1_Down, Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <b:NumericUpDownDoubleClickBehavior />
                                        </i:Interaction.Behaviors>
                                    </interactivity:NumericUpDown>


                                    <TextBlock Grid.Row="8"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="Z2下降参数"
                                               TextAlignment="Center" />


                                    <interactivity:NumericUpDown Name="Z2DownValue"
                                                                 Grid.Row="8"
                                                                 Grid.Column="1"
                                                                 Width="150"
                                                                 Height="35"
                                                                 Maximum="0"
                                                                 Minimum="-200000"
                                                                 Tag="Z2下降参数"
                                                                 Value="{Binding Z2_Down, Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <b:NumericUpDownDoubleClickBehavior />
                                        </i:Interaction.Behaviors>
                                    </interactivity:NumericUpDown>
                                </Grid>
                            </Border>

                            <Border Grid.Column="2"
                                    Margin="5"
                                    BorderBrush="{StaticResource GridLineBrush}"
                                    BorderThickness="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="2" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="实时针头位置"
                                               TextAlignment="Center" />

                                    <Border Grid.Row="1" Background="{StaticResource GridLineBrush}" />

                                    <StackPanel Grid.Row="2"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Orientation="Vertical">
                                        <Border Width="200"
                                                Height="50"
                                                Margin="0,5,0,0"
                                                BorderBrush="{StaticResource GridLineBrush}"
                                                BorderThickness="2"
                                                CornerRadius="5">
                                            <StackPanel Margin="5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Orientation="Horizontal">
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="X  :  " />
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="{Binding Pos_X}" />
                                            </StackPanel>
                                        </Border>
                                        <Border Width="200"
                                                Height="50"
                                                Margin="0,5,0,0"
                                                BorderBrush="{StaticResource GridLineBrush}"
                                                BorderThickness="2"
                                                CornerRadius="5">
                                            <StackPanel Margin="5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Orientation="Horizontal">
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="Y  :  " />
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="{Binding Pos_Y}" />
                                            </StackPanel>
                                        </Border>

                                        <Border Width="200"
                                                Height="50"
                                                Margin="0,5,0,0"
                                                BorderBrush="{StaticResource GridLineBrush}"
                                                BorderThickness="2"
                                                CornerRadius="5">
                                            <StackPanel Margin="5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Orientation="Horizontal">
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="Z1:  " />
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="{Binding Pos_Z1, Converter={x:Static cv:CheckPosition.Instance}}" />
                                            </StackPanel>
                                        </Border>
                                        <Border Width="200"
                                                Height="50"
                                                Margin="0,5,0,0"
                                                BorderBrush="{StaticResource GridLineBrush}"
                                                BorderThickness="2"
                                                CornerRadius="5">
                                            <StackPanel Margin="5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Orientation="Horizontal">
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="Z2:  " />
                                                <TextBlock FontSize="18"
                                                           FontWeight="Bold"
                                                           Foreground="White"
                                                           Text="{Binding Pos_Z2, Converter={x:Static cv:CheckPosition.Instance}}" />
                                            </StackPanel>
                                        </Border>


                                        <StackPanel Grid.Row="2"
                                                    Margin="0,10,0,5"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Bottom"
                                                    Orientation="Vertical">
                                            <!--<TextBlock Text="洗针操作"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Foreground="White"
                                                   FontSize="18"
                                                   Margin="0 0 0 10"></TextBlock>-->
                                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                                <Button Margin="0,0,0,0"
                                                        Background="{StaticResource ButtonSelectBrush}"
                                                        Content="洗针 1"
                                                        FontWeight="Bold"
                                                        Style="{StaticResource ButtonPrimary}"
                                                        Visibility="Collapsed" />
                                                <Button Margin="20,0,0,0"
                                                        Background="{StaticResource ButtonSelectBrush}"
                                                        Content="洗针 2"
                                                        FontWeight="Bold"
                                                        Style="{StaticResource ButtonPrimary}"
                                                        Visibility="Collapsed" />
                                                <Button Width="200"
                                                        Height="50"
                                                        Margin="0,0,0,0"
                                                        Background="{StaticResource ButtonSelectBrush}"
                                                        Command="{Binding CleanCommand}"
                                                        Content="全部洗针"
                                                        FontWeight="Bold"
                                                        Style="{StaticResource ButtonPrimary}" />
                                            </StackPanel>
                                        </StackPanel>

                                    </StackPanel>



                                </Grid>
                            </Border>
                        </Grid>

                        <Grid Height="300">

                            <Grid.Resources>
                                <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                                <Style BasedOn="{StaticResource DataGridColumnHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                </Style>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border Margin="5"
                                    BorderBrush="{StaticResource GridLineBrush}"
                                    BorderThickness="2">

                                <Grid>

                                    <Grid.Resources>
                                        <FrameworkElement x:Key="FrameworkElement" DataContext="{Binding EngineerViewModel, Source={StaticResource Locator}}" />
                                    </Grid.Resources>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="2" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="样品位置参数"
                                               TextAlignment="Center" />

                                    <Border Grid.Row="1" Background="{StaticResource GridLineBrush}" />

                                    <DataGrid Grid.Row="2"
                                              Margin="1,0,1,1"
                                              VerticalAlignment="Top"
                                              interactivity:BorderElement.CornerRadius="0"
                                              AutoGenerateColumns="False"
                                              Background="Transparent"
                                              CanUserAddRows="False"
                                              CanUserSortColumns="False"
                                              HeadersVisibility="Column"
                                              ItemsSource="{Binding PositionDatas}"
                                              SelectionMode="Single"
                                              VirtualizingPanel.IsVirtualizing="False">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}"
                                                                Foreground="White"
                                                                Header="针头位置"
                                                                IsReadOnly="True">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEditing" Value="True">
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="White" />
                                                            </MultiTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Width="*"
                                                                Binding="{Binding Px}"
                                                                Header="X 位置"
                                                                Visibility="{Binding DataContext.Test, Source={StaticResource FrameworkElement}}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEditing" Value="True">
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="White" />
                                                            </MultiTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Width="*"
                                                                Binding="{Binding Py}"
                                                                Header="Y 位置">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEditing" Value="True">
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="White" />
                                                            </MultiTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>
                                            <!--<DataGridTextColumn Binding="{Binding Px2}"
                                                                Header="X 位置(2ml)"
                                                                Visibility="{Binding DataContext.Test, Source={StaticResource FrameworkElement}}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEditing" Value="True">
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="White" />
                                                            </MultiTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Py2}" Header="Y 位置(2ml)">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEditing" Value="True">
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="White" />
                                                            </MultiTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>-->
                                            <DataGridTextColumn Width="*"
                                                                Binding="{Binding Note}"
                                                                Header="备注">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEditing" Value="True">
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="White" />
                                                            </MultiTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                        <DataGrid.RowStyle>
                                            <Style BasedOn="{StaticResource DataGridRowStyle}" TargetType="{x:Type DataGridRow}">
                                                <Setter Property="Background" Value="#1D2837" />
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="BorderBrush" Value="{StaticResource GridLineBrush}" />
                                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextIconBrush}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="true" />
                                                            <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" Value="DarkGray" />
                                                        <!--<Setter Property="Foreground"
                                                                Value="{DynamicResource PrimaryTextBrush}" />-->
                                                    </MultiTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <!--<DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell"
                                                   BasedOn="{StaticResource DataGridCellStyle}">
                                                <Setter Property="Background"
                                                        Value="Red"></Setter>

                                            </Style>
                                        </DataGrid.CellStyle>-->
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style BasedOn="{StaticResource DataGridColumnHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="Foreground" Value="White" />
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>
                                        <i:Interaction.Behaviors>
                                            <b:DataGridDoubleClickBehavior />
                                        </i:Interaction.Behaviors>
                                    </DataGrid>
                                </Grid>
                            </Border>

                        </Grid>

                        <Grid Height="600">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Margin="5"
                                    BorderBrush="{StaticResource GridLineBrush}"
                                    BorderThickness="2">
                                <StackPanel HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Orientation="Vertical">
                                    <TextBlock Margin="0,0,0,25"
                                               HorizontalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="液面追随标定 A泵" />

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 1: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围1最小值"
                                                                     Value="{Binding CompensateData1[0].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A11Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围1最大值"
                                                                     Value="{Binding CompensateData1[0].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A11Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData1[0].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData1[0].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A11Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A11Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[0].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A11Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A11Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[0].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A11Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 2: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围2最小值"
                                                                     Value="{Binding CompensateData1[1].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A12Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围2最大值"
                                                                     Value="{Binding CompensateData1[1].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A12Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData1[1].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData1[1].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A12Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A12Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[1].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A12Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A12Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[1].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A12Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 3: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围3最小值"
                                                                     Value="{Binding CompensateData1[2].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A13Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围3最大值"
                                                                     Value="{Binding CompensateData1[2].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A13Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData1[2].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData1[2].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A13Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A13Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[2].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A13Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A13Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[2].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A13Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 4: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围4最小值"
                                                                     Value="{Binding CompensateData1[3].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A14Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围4最大值"
                                                                     Value="{Binding CompensateData1[3].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A14Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData1[3].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData1[3].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A14Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A14Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[3].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A14Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A14Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[3].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A14Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 5: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围5最小值"
                                                                     Value="{Binding CompensateData1[4].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A15Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围5最大值"
                                                                     Value="{Binding CompensateData1[4].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A15Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData1[4].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData1[4].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A15Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A15Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[4].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A15Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A15Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData1[4].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A15Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>
                                </StackPanel>
                            </Border>

                            <Border Grid.Row="1"
                                    Margin="5"
                                    BorderBrush="{StaticResource GridLineBrush}"
                                    BorderThickness="2">
                                <StackPanel HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Orientation="Vertical">
                                    <TextBlock Margin="0,0,0,25"
                                               HorizontalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="液面追随标定 B泵" />

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 1: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围1最小值"
                                                                     Value="{Binding CompensateData2[0].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A21Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围1最大值"
                                                                     Value="{Binding CompensateData2[0].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A21Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData2[0].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData2[0].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A21Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A21Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[0].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A21Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A21Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[0].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A21Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 2: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围2最小值"
                                                                     Value="{Binding CompensateData2[1].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A22Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围2最大值"
                                                                     Value="{Binding CompensateData2[1].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A22Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData2[1].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData2[1].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A22Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A22Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[1].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A22Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A22Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[1].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A22Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 3: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围3最小值"
                                                                     Value="{Binding CompensateData2[2].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A23Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围3最大值"
                                                                     Value="{Binding CompensateData2[2].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A23Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData2[2].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData2[2].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A23Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A23Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[2].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A23Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A23Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[2].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A23Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 4: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围4最小值"
                                                                     Value="{Binding CompensateData2[3].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A24Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围4最大值"
                                                                     Value="{Binding CompensateData2[3].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A24Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData2[3].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData2[3].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A24Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A24Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[3].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A24Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A24Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[3].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A24Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="范围 5: " />
                                        <interactivity:NumericUpDown DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     IsReadOnly="False"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围5最小值"
                                                                     Value="{Binding CompensateData2[4].Min}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="~" />
                                        <interactivity:NumericUpDown x:Name="A25Max"
                                                                     DecimalPlaces="1"
                                                                     Increment="0.1"
                                                                     Maximum="2"
                                                                     Minimum="0"
                                                                     Tag="范围5最大值"
                                                                     Value="{Binding CompensateData2[4].Max}">
                                            <i:Interaction.Behaviors>
                                                <b:NumericUpDownDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </interactivity:NumericUpDown>
                                        <TextBlock Style="{StaticResource MiddleTextBlock}" Text="ml" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="补偿算法: " />
                                        <interactivity:ComboBox x:Name="A25Method"
                                                                Margin="0,0,10,0"
                                                                SelectedIndex="{Binding CompensateData2[4].SelectMethod}">
                                            <TextBlock FontSize="14" Text="常数" />
                                            <TextBlock FontSize="14" Text="一元一次方程" />
                                            <TextBlock FontSize="14" Text="一元二次方程" />
                                        </interactivity:ComboBox>
                                        <TextBox Width="80" Text="{Binding CompensateData2[4].A}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x²"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A25Method}" />
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A25Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[4].B}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility.Instance}, ElementName=A25Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <TextBlock Margin="3,0,0,0"
                                                   Style="{StaticResource MiddleTextBlock}"
                                                   Text="x+"
                                                   Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A25Method}" />
                                        <TextBox Width="80"
                                                 Text="{Binding CompensateData2[4].C}"
                                                 Visibility="{Binding SelectedIndex, Converter={x:Static cv:Int2Visibility_b.Instance}, ElementName=A25Method}">
                                            <i:Interaction.Behaviors>
                                                <b:TextBoxDoubleClickBehavior />
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </StackPanel>



                                </StackPanel>

                            </Border>
                        </Grid>

                    </StackPanel>
                </ScrollViewer>
            </Grid>

        </Grid>
    </Border>
</UserControl>
