<Application x:Class="SgS.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="https://handyorg.github.io/handycontrol"
             xmlns:ct="clr-namespace:SgS.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:d1P1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:interactivity="https://handyorg.github.io/handycontrol"
             d1P1:Ignorable="d"
             ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <ResourceDictionary>

            <vm:ViewModelLocator xmlns:vm="clr-namespace:SgS.ViewModel"
                                 x:Key="Locator"
                                 d:IsDataSource="True" />

            <Style x:Key="ShadowWindow" TargetType="Window">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Window">
                            <Border Padding="15">
                                <Border Name="BdrShadow">
                                    <ContentPresenter ContentSource="Content" />
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="ShadowEffect"
                                                          BlurRadius="10"
                                                          Direction="200"
                                                          Opacity="0"
                                                          ShadowDepth="10"
                                                          Color="#FF123A8A" />
                                    </Border.Effect>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ShadowEffect"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.5"
                                                             Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ShadowEffect"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--<LinearGradientBrush x:Key="Bg">
                <GradientStop Offset="0.1"
                              Color="#FF165A61" />
                <GradientStop Offset="0.5"
                              Color="#FF123A8A" />
                <GradientStop Offset="1.0"
                              Color="#FF037E9B" />
            </LinearGradientBrush>-->

            <SolidColorBrush x:Key="Bg" Color="#304258" />
            <SolidColorBrush x:Key="GridBgBrush" Color="#304258" />
            <SolidColorBrush x:Key="GridLineBrush" Color="#15557B" />
            <SolidColorBrush x:Key="GaryBrush" Color="#7E7E80" />
            <SolidColorBrush x:Key="ButtonSelectBrush" Color="#1A7985" />

            <Storyboard x:Key="Loading">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="0"
                                 To="1"
                                 Duration="0:0:0.5" />
            </Storyboard>
            <Storyboard x:Key="ColorAnnimation">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#304258"
                                To="#1A7985"
                                Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="ColorAnnimationBack">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#1A7985"
                                To="#304258"
                                Duration="0:0:0.2" />
            </Storyboard>

            <Storyboard x:Key="StartColorAnnimation">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#304258"
                                To="#AA00FF00"
                                Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="StartColorAnnimationBack">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#AA00FF00"
                                To="#304258"
                                Duration="0:0:0.2" />
            </Storyboard>

            <Storyboard x:Key="PauseColorAnnimation">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#304258"
                                To="#AAFFFF00"
                                Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="PauseColorAnnimationBack">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#AAFFFF00"
                                To="#304258"
                                Duration="0:0:0.2" />
            </Storyboard>

            <Storyboard x:Key="StopColorAnnimation">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#304258"
                                To="#AAFF0000"
                                Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="StopColorAnnimationBack">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                From="#AAFF0000"
                                To="#304258"
                                Duration="0:0:0.2" />
            </Storyboard>

            <Style x:Key="ComboBoxModifiy" TargetType="{x:Type interactivity:ComboBox}">
                <Setter Property="Width" Value="140" />
                <Setter Property="BorderBrush" Value="{StaticResource GridLineBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="StoryboardHidden">
                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="9,0,0,4"
                                                        Duration="0" />
                                </Storyboard>
                                <Storyboard x:Key="StoryboardShow">
                                    <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="9,0,0,-18"
                                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" MinWidth="30" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid.RowDefinitions>
                                <StackPanel Grid.ColumnSpan="2"
                                            Margin="{TemplateBinding Padding}"
                                            Orientation="Horizontal">
                                    <StackPanel.Visibility>
                                        <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <interactivity:String2VisibilityConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </StackPanel.Visibility>
                                    <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentPresenter Margin="4,0,0,0"
                                                      Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                      TextElement.Foreground="{DynamicResource DangerBrush}">
                                        <ContentPresenter.Visibility>
                                            <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </ContentPresenter.Visibility>
                                    </ContentPresenter>
                                </StackPanel>
                                <Popup x:Name="PART_Popup"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Margin="1"
                                       AllowsTransparency="True"
                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Bottom"
                                       PopupAnimation="Slide">
                                    <Border x:Name="dropDownBorder"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            Background="{StaticResource Bg}"
                                            BorderBrush="{StaticResource GridLineBrush}"
                                            BorderThickness="1"
                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                            <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas Width="0"
                                                        Height="0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Top">
                                                    <Rectangle x:Name="opaqueRect"
                                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </interactivity:SimplePanel>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <TextBlock x:Name="TextBlockError"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           Margin="9,0,0,4"
                                           VerticalAlignment="Bottom"
                                           FontSize="12"
                                           Foreground="{DynamicResource DangerBrush}"
                                           Text="{TemplateBinding ErrorStr}" />
                                <ToggleButton x:Name="toggleButton"
                                              Grid.Row="1"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="2"
                                              Height="{TemplateBinding Height}"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="ClickMode" Value="Press" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="30" />
                                                            </Grid.ColumnDefinitions>
                                                            <Border Grid.ColumnSpan="2"
                                                                    Background="Transparent"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                    SnapsToDevicePixels="True" />
                                                            <Path x:Name="arrow"
                                                                  Grid.Column="1"
                                                                  Margin="7"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                  Fill="{TemplateBinding BorderBrush}"
                                                                  Stretch="Uniform" />
                                                            <Border Grid.Column="0" Margin="1">
                                                                <Border.Visibility>
                                                                    <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                        <Binding.Converter>
                                                                            <interactivity:String2VisibilityReConverter />
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </Border.Visibility>
                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  Focusable="False"
                                                                                  RecognizesAccessKey="True"
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.4" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="1,0">
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      IsHitTestVisible="False"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <Button x:Name="ButtonClear"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Width="16"
                                        Margin="0,0,26,0"
                                        Padding="0,6"
                                        interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                        Command="interactivity:ControlCommands.Clear"
                                        Foreground="{TemplateBinding BorderBrush}"
                                        Visibility="Collapsed">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ContentControl Margin="{TemplateBinding Padding}"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                      Fill="{TemplateBinding Foreground}"
                                                                      SnapsToDevicePixels="True"
                                                                      Stretch="Uniform" />
                                                            </ContentControl>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                    <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <interactivity:SimplePanel>
                                                                    <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                        <StackPanel Margin="{TemplateBinding Padding}"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                    Orientation="Horizontal">
                                                                            <Path x:Name="PathMain"
                                                                                  Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                  Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                  Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                  Fill="{TemplateBinding Foreground}"
                                                                                  SnapsToDevicePixels="True"
                                                                                  Stretch="Uniform" />
                                                                            <ContentPresenter x:Name="ContentPresenterMain"
                                                                                              Margin="6,0,0,0"
                                                                                              VerticalAlignment="Center"
                                                                                              Content="{TemplateBinding Content}"
                                                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                              RecognizesAccessKey="True"
                                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </StackPanel>
                                                                    </Border>
                                                                </interactivity:SimplePanel>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="Content" Value="{x:Null}">
                                                                        <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                    </Trigger>
                                                                    <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                        <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                        <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type ButtonBase}">
                                                            <Setter Property="Height" Value="30" />
                                                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                            <Setter Property="Padding" Value="10,6" />
                                                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                            <Setter Property="BorderThickness" Value="0" />
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                            <Setter Property="VerticalAlignment" Value="Center" />
                                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type Control}">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                    <Setter Property="FontSize" Value="12" />
                                                                    <Setter Property="FocusVisualStyle">
                                                                        <Setter.Value>
                                                                            <Style>
                                                                                <Setter Property="Control.Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Rectangle RadiusX="4" RadiusY="4">
                                                                                                <Rectangle.Style>
                                                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                                                        <Setter Property="Margin" Value="-2" />
                                                                                                        <Setter Property="Opacity" Value="0.6" />
                                                                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                        <Setter Property="StrokeThickness" Value="2" />
                                                                                                        <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                    </Style>
                                                                                                </Rectangle.Style>
                                                                                            </Rectangle>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Style.BasedOn>
                                                        </Style>
                                                    </Style.BasedOn>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="0.9" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Opacity" Value="0.6" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.4" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=interactivity:ComboBox, Mode=FindAncestor}, Path=SelectedItem}" Value="{x:Null}">
                                    <Setter Property="SelectedIndex" Value="1" />
                                </DataTrigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                </Trigger>
                                <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                    <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                    <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True" />
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </MultiTrigger>
                                <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                        <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                        <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                        <Condition Property="ShowClearButton" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                        <Condition Property="ShowClearButton" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                </MultiTrigger>
                                <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                    <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsError" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                    Storyboard.TargetProperty="Margin"
                                                                    To="9,0,0,-18"
                                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                    Storyboard.TargetProperty="Margin"
                                                                    To="9,0,0,4"
                                                                    Duration="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border x:Name="Bd"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="False" />
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Property="Background" Value="#1D2837" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                <Setter Property="Foreground" Value="White" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="30" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.ColumnSpan="2"
                                                    Margin="{TemplateBinding Padding}"
                                                    Orientation="Horizontal">
                                            <StackPanel.Visibility>
                                                <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <interactivity:String2VisibilityConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </StackPanel.Visibility>
                                            <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ContentPresenter Margin="4,0,0,0"
                                                              Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextElement.Foreground="{DynamicResource DangerBrush}">
                                                <ContentPresenter.Visibility>
                                                    <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ContentPresenter.Visibility>
                                            </ContentPresenter>
                                        </StackPanel>
                                        <Popup x:Name="PART_Popup"
                                               Grid.Row="1"
                                               Grid.Column="0"
                                               Grid.ColumnSpan="2"
                                               Margin="1"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               Placement="Bottom"
                                               PopupAnimation="Slide">
                                            <Border x:Name="dropDownBorder"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{DynamicResource RegionBrush}"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <ToggleButton x:Name="toggleButton"
                                                      Grid.Row="1"
                                                      Grid.Column="0"
                                                      Grid.ColumnSpan="2"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="ClickMode" Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="30" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Grid.ColumnSpan="2"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                            SnapsToDevicePixels="True" />
                                                                    <Path x:Name="arrow"
                                                                          Grid.Column="1"
                                                                          Margin="7"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                          Fill="{TemplateBinding BorderBrush}"
                                                                          Stretch="Uniform" />
                                                                    <Border Grid.Column="0" Margin="1">
                                                                        <Border.Visibility>
                                                                            <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                <Binding.Converter>
                                                                                    <interactivity:String2VisibilityReConverter />
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Border.Visibility>
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          Focusable="False"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border Grid.Row="1"
                                                Grid.Column="0"
                                                Margin="1,0">
                                            <ContentPresenter x:Name="contentPresenter"
                                                              Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Content="{TemplateBinding SelectionBoxItem}"
                                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                              IsHitTestVisible="False"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                        </Trigger>
                                        <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                            <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="True" />
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </MultiTrigger>
                                        <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                            <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="interactivity:InfoElement.Symbol" Value="*" />
                        <Setter Property="interactivity:InfoElement.ContentHeight" Value="NaN" />
                        <Setter Property="interactivity:InfoElement.MinContentHeight" Value="30" />
                        <Style.BasedOn>
                            <Style TargetType="{x:Type ComboBox}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                <Setter Property="ItemContainerStyle">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Padding" Value="10,6" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="MinHeight" Value="30" />
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                        <Border x:Name="Bd"
                                                                Padding="{TemplateBinding Padding}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                SnapsToDevicePixels="True">
                                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              Content="{TemplateBinding Content}"
                                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                                <Setter Property="Foreground" Value="White" />
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                <Setter Property="MinHeight" Value="30" />
                                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                <Setter Property="Padding" Value="8,6" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="30" />
                                                </Grid.ColumnDefinitions>
                                                <Popup x:Name="PART_Popup"
                                                       Grid.ColumnSpan="2"
                                                       Margin="1"
                                                       AllowsTransparency="True"
                                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Placement="Bottom"
                                                       PopupAnimation="Slide">
                                                    <Border x:Name="dropDownBorder"
                                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                            Background="{DynamicResource RegionBrush}"
                                                            BorderBrush="{DynamicResource BorderBrush}"
                                                            BorderThickness="1"
                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                            <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas Width="0"
                                                                        Height="0"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top">
                                                                    <Rectangle x:Name="opaqueRect"
                                                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </interactivity:SimplePanel>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton"
                                                              Grid.Column="0"
                                                              Grid.ColumnSpan="2"
                                                              Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                                              BorderBrush="{TemplateBinding BorderBrush}"
                                                              BorderThickness="{TemplateBinding BorderThickness}"
                                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                            <Setter Property="IsTabStop" Value="False" />
                                                            <Setter Property="Focusable" Value="False" />
                                                            <Setter Property="ClickMode" Value="Press" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                SnapsToDevicePixels="True">
                                                                            <Border Width="17"
                                                                                    Margin="0,0,6,0"
                                                                                    HorizontalAlignment="Right"
                                                                                    BorderBrush="Transparent"
                                                                                    BorderThickness="1"
                                                                                    SnapsToDevicePixels="True">
                                                                                <Path x:Name="arrow"
                                                                                      Width="16"
                                                                                      Height="9"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                      Fill="{TemplateBinding BorderBrush}" />
                                                                            </Border>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <Border Grid.Column="0" Margin="1,0">
                                                    <ContentPresenter x:Name="contentPresenter"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                      IsHitTestVisible="False"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                </Trigger>
                                                <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                    <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True" />
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                </MultiTrigger>
                                                <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                        <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                </MultiTrigger>
                                                <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                    <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.4" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Style.Triggers>
                                    <Trigger Property="IsEditable" Value="True">
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="30" />
                                                        </Grid.ColumnDefinitions>
                                                        <Popup x:Name="PART_Popup"
                                                               Grid.ColumnSpan="2"
                                                               AllowsTransparency="True"
                                                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                               Placement="Bottom"
                                                               PopupAnimation="Slide">
                                                            <Border x:Name="dropDownBorder"
                                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                    Background="{DynamicResource RegionBrush}"
                                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                                    BorderThickness="1"
                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                        <Canvas Width="0"
                                                                                Height="0"
                                                                                HorizontalAlignment="Left"
                                                                                VerticalAlignment="Top">
                                                                            <Rectangle x:Name="opaqueRect"
                                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                        </Canvas>
                                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </interactivity:SimplePanel>
                                                                </ScrollViewer>
                                                            </Border>
                                                        </Popup>
                                                        <ToggleButton x:Name="toggleButton"
                                                                      Grid.Column="0"
                                                                      Grid.ColumnSpan="2"
                                                                      Background="{TemplateBinding Background}"
                                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                    <Setter Property="Focusable" Value="False" />
                                                                    <Setter Property="ClickMode" Value="Press" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <Border Background="{TemplateBinding Background}"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                        SnapsToDevicePixels="True">
                                                                                    <Border Width="17"
                                                                                            Margin="0,0,6,0"
                                                                                            HorizontalAlignment="Right"
                                                                                            BorderBrush="Transparent"
                                                                                            BorderThickness="1"
                                                                                            SnapsToDevicePixels="True">
                                                                                        <Path x:Name="arrow"
                                                                                              Width="16"
                                                                                              Height="9"
                                                                                              HorizontalAlignment="Center"
                                                                                              VerticalAlignment="Center"
                                                                                              Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                              Fill="{TemplateBinding BorderBrush}" />
                                                                                    </Border>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsChecked" Value="True">
                                                                                        <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>
                                                        <Border Grid.Column="0" Margin="-1,1">
                                                            <TextBox x:Name="PART_EditableTextBox"
                                                                     Padding="{TemplateBinding Padding}"
                                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                     Background="{TemplateBinding Background}"
                                                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                                <TextBox.Style>
                                                                    <Style TargetType="{x:Type TextBox}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                        <Setter Property="AllowDrop" Value="True" />
                                                                        <Setter Property="MinWidth" Value="0" />
                                                                        <Setter Property="MinHeight" Value="0" />
                                                                        <Setter Property="Padding" Value="10,6" />
                                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                                                  Padding="{TemplateBinding Padding}"
                                                                                                  Background="Transparent"
                                                                                                  Focusable="False"
                                                                                                  HorizontalScrollBarVisibility="Hidden"
                                                                                                  VerticalScrollBarVisibility="Hidden" />
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </TextBox.Style>
                                                            </TextBox>
                                                        </Border>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="HasItems" Value="False">
                                                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                        </Trigger>
                                                        <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                            <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                            <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsGrouping" Value="True" />
                                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                        </MultiTrigger>
                                                        <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                        </Trigger>
                                                        <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                        </MultiTrigger>
                                                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.4" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Style.BasedOn>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEditable" Value="False" />
                                    <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot"
                                                  MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                  SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="30" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.Height>
                                                    <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <interactivity:Double2GridLengthConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Grid.Height>
                                                <StackPanel Margin="0,7,6,7"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Orientation="Horizontal">
                                                    <StackPanel.Visibility>
                                                        <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <interactivity:String2VisibilityConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </StackPanel.Visibility>
                                                    <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ContentPresenter Margin="4,0,0,0"
                                                                      Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                      TextElement.Foreground="{DynamicResource DangerBrush}">
                                                        <ContentPresenter.Visibility>
                                                            <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </ContentPresenter.Visibility>
                                                    </ContentPresenter>
                                                </StackPanel>
                                                <Popup x:Name="PART_Popup"
                                                       Grid.Column="1"
                                                       Grid.ColumnSpan="2"
                                                       Margin="1"
                                                       AllowsTransparency="True"
                                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Placement="Bottom"
                                                       PopupAnimation="Slide">
                                                    <Border x:Name="dropDownBorder"
                                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                            Background="{DynamicResource RegionBrush}"
                                                            BorderBrush="{DynamicResource BorderBrush}"
                                                            BorderThickness="1"
                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                            <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas Width="0"
                                                                        Height="0"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top">
                                                                    <Rectangle x:Name="opaqueRect"
                                                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </interactivity:SimplePanel>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton"
                                                              Grid.Column="1"
                                                              Grid.ColumnSpan="2"
                                                              Padding="{TemplateBinding Padding}"
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Background="{TemplateBinding Background}"
                                                              BorderBrush="{TemplateBinding BorderBrush}"
                                                              BorderThickness="{TemplateBinding BorderThickness}"
                                                              Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                            <Setter Property="IsTabStop" Value="False" />
                                                            <Setter Property="Focusable" Value="False" />
                                                            <Setter Property="ClickMode" Value="Press" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition />
                                                                                <ColumnDefinition Width="30" />
                                                                            </Grid.ColumnDefinitions>
                                                                            <Border Grid.ColumnSpan="2"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                    SnapsToDevicePixels="True" />
                                                                            <Path x:Name="arrow"
                                                                                  Grid.Column="1"
                                                                                  Margin="7"
                                                                                  HorizontalAlignment="Center"
                                                                                  VerticalAlignment="Center"
                                                                                  Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                  Fill="{TemplateBinding BorderBrush}"
                                                                                  Stretch="Uniform" />
                                                                            <Border Grid.Column="0" Margin="1">
                                                                                <Border.Visibility>
                                                                                    <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                        <Binding.Converter>
                                                                                            <interactivity:String2VisibilityReConverter />
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </Border.Visibility>
                                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                  Content="{TemplateBinding Content}"
                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                  Focusable="False"
                                                                                                  RecognizesAccessKey="True"
                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <Border Grid.Column="1" Margin="1,0">
                                                    <ContentPresenter x:Name="contentPresenter"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                      IsHitTestVisible="False"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                </Trigger>
                                                <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                    <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True" />
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                </MultiTrigger>
                                                <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                        <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                </MultiTrigger>
                                                <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                    <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEditable" Value="True" />
                                    <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Top" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="30" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Grid.RowDefinitions>
                                                <StackPanel Grid.ColumnSpan="2"
                                                            Margin="{TemplateBinding Padding}"
                                                            Orientation="Horizontal">
                                                    <StackPanel.Visibility>
                                                        <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <interactivity:String2VisibilityConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </StackPanel.Visibility>
                                                    <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ContentPresenter Margin="4,0,0,0"
                                                                      Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                      TextElement.Foreground="{DynamicResource DangerBrush}">
                                                        <ContentPresenter.Visibility>
                                                            <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </ContentPresenter.Visibility>
                                                    </ContentPresenter>
                                                </StackPanel>
                                                <Popup x:Name="PART_Popup"
                                                       Grid.Row="1"
                                                       Grid.Column="0"
                                                       Grid.ColumnSpan="2"
                                                       AllowsTransparency="True"
                                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Placement="Bottom"
                                                       PopupAnimation="Slide">
                                                    <Border x:Name="dropDownBorder"
                                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                            Background="{DynamicResource RegionBrush}"
                                                            BorderBrush="{DynamicResource BorderBrush}"
                                                            BorderThickness="1"
                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                            <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas Width="0"
                                                                        Height="0"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top">
                                                                    <Rectangle x:Name="opaqueRect"
                                                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </interactivity:SimplePanel>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton"
                                                              Grid.Row="1"
                                                              Grid.Column="0"
                                                              Grid.ColumnSpan="2"
                                                              Padding="{TemplateBinding Padding}"
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Background="{TemplateBinding Background}"
                                                              BorderBrush="{TemplateBinding BorderBrush}"
                                                              BorderThickness="{TemplateBinding BorderThickness}"
                                                              Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                            <Setter Property="IsTabStop" Value="False" />
                                                            <Setter Property="Focusable" Value="False" />
                                                            <Setter Property="ClickMode" Value="Press" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition />
                                                                                <ColumnDefinition Width="30" />
                                                                            </Grid.ColumnDefinitions>
                                                                            <Border Grid.ColumnSpan="2"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                    SnapsToDevicePixels="True" />
                                                                            <Path x:Name="arrow"
                                                                                  Grid.Column="1"
                                                                                  Margin="7"
                                                                                  HorizontalAlignment="Center"
                                                                                  VerticalAlignment="Center"
                                                                                  Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                  Fill="{TemplateBinding BorderBrush}"
                                                                                  Stretch="Uniform" />
                                                                            <Border Grid.Column="0" Margin="1">
                                                                                <Border.Visibility>
                                                                                    <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                        <Binding.Converter>
                                                                                            <interactivity:String2VisibilityReConverter />
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </Border.Visibility>
                                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                  Content="{TemplateBinding Content}"
                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                  Focusable="False"
                                                                                                  RecognizesAccessKey="True"
                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <Border x:Name="border"
                                                        Grid.Row="1"
                                                        Grid.Column="0"
                                                        Margin="-1,1">
                                                    <TextBox x:Name="PART_EditableTextBox"
                                                             Padding="{TemplateBinding Padding}"
                                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                             Background="{TemplateBinding Background}"
                                                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="AllowDrop" Value="True" />
                                                                <Setter Property="MinWidth" Value="0" />
                                                                <Setter Property="MinHeight" Value="0" />
                                                                <Setter Property="Padding" Value="10,6" />
                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                                            <ScrollViewer x:Name="PART_ContentHost"
                                                                                          Padding="{TemplateBinding Padding}"
                                                                                          Background="Transparent"
                                                                                          Focusable="False"
                                                                                          HorizontalScrollBarVisibility="Hidden"
                                                                                          VerticalScrollBarVisibility="Hidden" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                </Trigger>
                                                <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                    <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True" />
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                </MultiTrigger>
                                                <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                </Trigger>
                                                <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                        <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                </MultiTrigger>
                                                <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                    <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEditable" Value="True" />
                                    <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid x:Name="templateRoot"
                                                  MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                  SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="30" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.Height>
                                                    <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <interactivity:Double2GridLengthConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Grid.Height>
                                                <StackPanel Margin="0,7,6,7"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Orientation="Horizontal">
                                                    <StackPanel.Visibility>
                                                        <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <interactivity:String2VisibilityConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </StackPanel.Visibility>
                                                    <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ContentPresenter Margin="4,0,0,0"
                                                                      Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                                      TextElement.Foreground="{DynamicResource DangerBrush}">
                                                        <ContentPresenter.Visibility>
                                                            <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </ContentPresenter.Visibility>
                                                    </ContentPresenter>
                                                </StackPanel>
                                                <Popup x:Name="PART_Popup"
                                                       Grid.Column="1"
                                                       Grid.ColumnSpan="2"
                                                       AllowsTransparency="True"
                                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Placement="Bottom"
                                                       PopupAnimation="Slide">
                                                    <Border x:Name="dropDownBorder"
                                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                            Background="{DynamicResource RegionBrush}"
                                                            BorderBrush="{DynamicResource BorderBrush}"
                                                            BorderThickness="1"
                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                            <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas Width="0"
                                                                        Height="0"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top">
                                                                    <Rectangle x:Name="opaqueRect"
                                                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </interactivity:SimplePanel>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                                <ToggleButton x:Name="toggleButton"
                                                              Grid.Column="1"
                                                              Grid.ColumnSpan="2"
                                                              Padding="{TemplateBinding Padding}"
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Background="{TemplateBinding Background}"
                                                              BorderBrush="{TemplateBinding BorderBrush}"
                                                              BorderThickness="{TemplateBinding BorderThickness}"
                                                              Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                            <Setter Property="IsTabStop" Value="False" />
                                                            <Setter Property="Focusable" Value="False" />
                                                            <Setter Property="ClickMode" Value="Press" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition />
                                                                                <ColumnDefinition Width="30" />
                                                                            </Grid.ColumnDefinitions>
                                                                            <Border Grid.ColumnSpan="2"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                    SnapsToDevicePixels="True" />
                                                                            <Path x:Name="arrow"
                                                                                  Grid.Column="1"
                                                                                  Margin="7"
                                                                                  HorizontalAlignment="Center"
                                                                                  VerticalAlignment="Center"
                                                                                  Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                  Fill="{TemplateBinding BorderBrush}"
                                                                                  Stretch="Uniform" />
                                                                            <Border Grid.Column="0" Margin="1">
                                                                                <Border.Visibility>
                                                                                    <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                        <Binding.Converter>
                                                                                            <interactivity:String2VisibilityReConverter />
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </Border.Visibility>
                                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                  Content="{TemplateBinding Content}"
                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                  Focusable="False"
                                                                                                  RecognizesAccessKey="True"
                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <Border x:Name="border"
                                                        Grid.Column="1"
                                                        Margin="-1,1"
                                                        Background="Transparent">
                                                    <TextBox x:Name="PART_EditableTextBox"
                                                             Padding="{TemplateBinding Padding}"
                                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                             Background="{TemplateBinding Background}"
                                                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="AllowDrop" Value="True" />
                                                                <Setter Property="MinWidth" Value="0" />
                                                                <Setter Property="MinHeight" Value="0" />
                                                                <Setter Property="Padding" Value="10,6" />
                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                                            <ScrollViewer x:Name="PART_ContentHost"
                                                                                          Padding="{TemplateBinding Padding}"
                                                                                          Background="Transparent"
                                                                                          Focusable="False"
                                                                                          HorizontalScrollBarVisibility="Hidden"
                                                                                          VerticalScrollBarVisibility="Hidden" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                </Trigger>
                                                <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                    <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True" />
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                </MultiTrigger>
                                                <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                        <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                        <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                </MultiTrigger>
                                                <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                                    <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEditable" Value="False" />
                            <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="StoryboardHidden">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,4"
                                                                Duration="0" />
                                        </Storyboard>
                                        <Storyboard x:Key="StoryboardShow">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,-18"
                                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="templateRoot"
                                          MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" MinWidth="30" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Height>
                                            <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <interactivity:Double2GridLengthConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </Grid.Height>
                                        <StackPanel Margin="0,7,6,7"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Orientation="Horizontal">
                                            <StackPanel.Visibility>
                                                <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <interactivity:String2VisibilityConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </StackPanel.Visibility>
                                            <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ContentPresenter Margin="4,0,0,0"
                                                              Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextElement.Foreground="{DynamicResource DangerBrush}">
                                                <ContentPresenter.Visibility>
                                                    <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ContentPresenter.Visibility>
                                            </ContentPresenter>
                                        </StackPanel>
                                        <Popup x:Name="PART_Popup"
                                               Grid.Column="1"
                                               Grid.ColumnSpan="2"
                                               Margin="1"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               Placement="Bottom"
                                               PopupAnimation="Slide">
                                            <Border x:Name="dropDownBorder"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{DynamicResource RegionBrush}"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <TextBlock x:Name="TextBlockError"
                                                   Grid.Column="1"
                                                   Grid.ColumnSpan="2"
                                                   Margin="9,0,0,4"
                                                   VerticalAlignment="Bottom"
                                                   FontSize="12"
                                                   Foreground="{DynamicResource DangerBrush}"
                                                   Text="{TemplateBinding ErrorStr}" />
                                        <ToggleButton x:Name="toggleButton"
                                                      Grid.Column="1"
                                                      Grid.ColumnSpan="2"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="ClickMode" Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="30" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Grid.ColumnSpan="2"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                            SnapsToDevicePixels="True" />
                                                                    <Path x:Name="arrow"
                                                                          Grid.Column="1"
                                                                          Margin="7"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                          Fill="{TemplateBinding BorderBrush}"
                                                                          Stretch="Uniform" />
                                                                    <Border Grid.Column="0" Margin="1">
                                                                        <Border.Visibility>
                                                                            <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                <Binding.Converter>
                                                                                    <interactivity:String2VisibilityReConverter />
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Border.Visibility>
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          Focusable="False"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border Grid.Column="1" Margin="1,0">
                                            <ContentPresenter x:Name="contentPresenter"
                                                              Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Content="{TemplateBinding SelectionBoxItem}"
                                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                              IsHitTestVisible="False"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <Button x:Name="ButtonClear"
                                                Grid.Column="2"
                                                Width="16"
                                                Margin="0,0,26,0"
                                                Padding="0,6"
                                                interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                Command="interactivity:ControlCommands.Clear"
                                                Foreground="{TemplateBinding BorderBrush}"
                                                Visibility="Collapsed">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ContentControl Margin="{TemplateBinding Padding}"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                        <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                              Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                              Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="True"
                                                                              Stretch="Uniform" />
                                                                    </ContentControl>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <interactivity:SimplePanel>
                                                                            <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <StackPanel Margin="{TemplateBinding Padding}"
                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                            Orientation="Horizontal">
                                                                                    <Path x:Name="PathMain"
                                                                                          Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                    <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                      Margin="6,0,0,0"
                                                                                                      VerticalAlignment="Center"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </interactivity:SimplePanel>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                                <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                            </Trigger>
                                                                            <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Height" Value="30" />
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                    <Setter Property="BorderThickness" Value="0" />
                                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                    <Style.BasedOn>
                                                                        <Style TargetType="{x:Type Control}">
                                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                            <Setter Property="FontSize" Value="12" />
                                                                            <Setter Property="FocusVisualStyle">
                                                                                <Setter.Value>
                                                                                    <Style>
                                                                                        <Setter Property="Control.Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate>
                                                                                                    <Rectangle RadiusX="4" RadiusY="4">
                                                                                                        <Rectangle.Style>
                                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                                <Setter Property="Margin" Value="-2" />
                                                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                <Setter Property="StrokeThickness" Value="2" />
                                                                                                                <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                            </Style>
                                                                                                        </Rectangle.Style>
                                                                                                    </Rectangle>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Style.BasedOn>
                                                                </Style>
                                                            </Style.BasedOn>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" Value="0.9" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                        </Trigger>
                                        <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                            <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="True" />
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </MultiTrigger>
                                        <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                            <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsError" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEditable" Value="True" />
                            <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Top" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="StoryboardHidden">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,4"
                                                                Duration="0" />
                                        </Storyboard>
                                        <Storyboard x:Key="StoryboardShow">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,-18"
                                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" MinWidth="30" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.ColumnSpan="2"
                                                    Margin="{TemplateBinding Padding}"
                                                    Orientation="Horizontal">
                                            <StackPanel.Visibility>
                                                <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <interactivity:String2VisibilityConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </StackPanel.Visibility>
                                            <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ContentPresenter Margin="4,0,0,0"
                                                              Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextElement.Foreground="{DynamicResource DangerBrush}">
                                                <ContentPresenter.Visibility>
                                                    <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ContentPresenter.Visibility>
                                            </ContentPresenter>
                                        </StackPanel>
                                        <Popup x:Name="PART_Popup"
                                               Grid.Row="1"
                                               Grid.Column="0"
                                               Grid.ColumnSpan="2"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                               Placement="Bottom"
                                               PopupAnimation="Slide">
                                            <Border x:Name="dropDownBorder"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{StaticResource Bg}"
                                                    BorderBrush="{StaticResource GridLineBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <TextBlock x:Name="TextBlockError"
                                                   Grid.Row="1"
                                                   Grid.Column="0"
                                                   Grid.ColumnSpan="2"
                                                   Margin="9,0,0,4"
                                                   VerticalAlignment="Bottom"
                                                   FontSize="12"
                                                   Foreground="{DynamicResource DangerBrush}"
                                                   Text="{TemplateBinding ErrorStr}" />
                                        <ToggleButton x:Name="toggleButton"
                                                      Grid.Row="1"
                                                      Grid.Column="0"
                                                      Grid.ColumnSpan="2"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Background="Transparent"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="ClickMode" Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="30" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Grid.ColumnSpan="2"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                            SnapsToDevicePixels="True" />
                                                                    <Path x:Name="arrow"
                                                                          Grid.Column="1"
                                                                          Margin="7"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                          Fill="{TemplateBinding BorderBrush}"
                                                                          Stretch="Uniform" />
                                                                    <Border Grid.Column="0" Margin="1">
                                                                        <Border.Visibility>
                                                                            <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                <Binding.Converter>
                                                                                    <interactivity:String2VisibilityReConverter />
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Border.Visibility>
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          Focusable="False"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="border"
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Margin="-1,1">
                                            <TextBox x:Name="PART_EditableTextBox"
                                                     Padding="{TemplateBinding Padding}"
                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="AllowDrop" Value="True" />
                                                        <Setter Property="MinWidth" Value="0" />
                                                        <Setter Property="MinHeight" Value="0" />
                                                        <Setter Property="Padding" Value="10,6" />
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                                  Padding="{TemplateBinding Padding}"
                                                                                  Background="Transparent"
                                                                                  Focusable="False"
                                                                                  HorizontalScrollBarVisibility="Hidden"
                                                                                  VerticalScrollBarVisibility="Hidden" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </Border>
                                        <Button x:Name="ButtonClear"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Width="16"
                                                Margin="0,0,26,0"
                                                Padding="0,6"
                                                interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                Command="interactivity:ControlCommands.Clear"
                                                Foreground="{TemplateBinding BorderBrush}"
                                                Visibility="Collapsed">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ContentControl Margin="{TemplateBinding Padding}"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                        <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                              Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                              Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="True"
                                                                              Stretch="Uniform" />
                                                                    </ContentControl>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <interactivity:SimplePanel>
                                                                            <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <StackPanel Margin="{TemplateBinding Padding}"
                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                            Orientation="Horizontal">
                                                                                    <Path x:Name="PathMain"
                                                                                          Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                    <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                      Margin="6,0,0,0"
                                                                                                      VerticalAlignment="Center"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </interactivity:SimplePanel>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                                <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                            </Trigger>
                                                                            <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Height" Value="30" />
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                    <Setter Property="BorderThickness" Value="0" />
                                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                    <Style.BasedOn>
                                                                        <Style TargetType="{x:Type Control}">
                                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                            <Setter Property="FontSize" Value="12" />
                                                                            <Setter Property="FocusVisualStyle">
                                                                                <Setter.Value>
                                                                                    <Style>
                                                                                        <Setter Property="Control.Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate>
                                                                                                    <Rectangle RadiusX="4" RadiusY="4">
                                                                                                        <Rectangle.Style>
                                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                                <Setter Property="Margin" Value="-2" />
                                                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                <Setter Property="StrokeThickness" Value="2" />
                                                                                                                <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                            </Style>
                                                                                                        </Rectangle.Style>
                                                                                                    </Rectangle>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Style.BasedOn>
                                                                </Style>
                                                            </Style.BasedOn>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" Value="0.9" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                        </Trigger>
                                        <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                            <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="True" />
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </MultiTrigger>
                                        <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </MultiTrigger>
                                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <Trigger Property="IsError" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                            <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEditable" Value="True" />
                            <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Top" />
                            <Condition Property="AutoComplete" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="StoryboardHidden">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,4"
                                                                Duration="0" />
                                        </Storyboard>
                                        <Storyboard x:Key="StoryboardShow">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,-18"
                                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" MinWidth="30" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="{Binding (interactivity:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.ColumnSpan="2"
                                                    Margin="{TemplateBinding Padding}"
                                                    Orientation="Horizontal">
                                            <StackPanel.Visibility>
                                                <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <interactivity:String2VisibilityConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </StackPanel.Visibility>
                                            <TextBlock Margin="1,0,0,0" Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ContentPresenter Margin="4,0,0,0"
                                                              Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextElement.Foreground="{DynamicResource DangerBrush}">
                                                <ContentPresenter.Visibility>
                                                    <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ContentPresenter.Visibility>
                                            </ContentPresenter>
                                        </StackPanel>
                                        <Popup x:Name="PART_Popup"
                                               Grid.Row="1"
                                               Grid.Column="0"
                                               Grid.ColumnSpan="2"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                               Placement="Bottom"
                                               PopupAnimation="Slide">
                                            <Border x:Name="dropDownBorder"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{DynamicResource RegionBrush}"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <Popup x:Name="PART_Popup_AutoComplete"
                                               Grid.Row="1"
                                               Grid.Column="0"
                                               Grid.ColumnSpan="2"
                                               AllowsTransparency="True"
                                               Placement="Bottom"
                                               PopupAnimation="Slide"
                                               StaysOpen="False">
                                            <Border x:Name="dropDownBorder_AutoComplete"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{DynamicResource RegionBrush}"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer_AutoComplete" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect_AutoComplete"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder_AutoComplete}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder_AutoComplete}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder_AutoComplete}" />
                                                        </Canvas>
                                                        <StackPanel x:Name="PART_AutoCompletePanel"
                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <TextBlock x:Name="TextBlockError"
                                                   Grid.Row="1"
                                                   Grid.Column="0"
                                                   Grid.ColumnSpan="2"
                                                   Margin="9,0,0,4"
                                                   VerticalAlignment="Bottom"
                                                   FontSize="12"
                                                   Foreground="{DynamicResource DangerBrush}"
                                                   Text="{TemplateBinding ErrorStr}" />
                                        <ToggleButton x:Name="toggleButton"
                                                      Grid.Row="1"
                                                      Grid.Column="0"
                                                      Grid.ColumnSpan="2"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="ClickMode" Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="30" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Grid.ColumnSpan="2"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                            SnapsToDevicePixels="True" />
                                                                    <Path x:Name="arrow"
                                                                          Grid.Column="1"
                                                                          Margin="7"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                          Fill="{TemplateBinding BorderBrush}"
                                                                          Stretch="Uniform" />
                                                                    <Border Grid.Column="0" Margin="1">
                                                                        <Border.Visibility>
                                                                            <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                <Binding.Converter>
                                                                                    <interactivity:String2VisibilityReConverter />
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Border.Visibility>
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          Focusable="False"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="border"
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Margin="-1,1">
                                            <TextBox x:Name="PART_EditableTextBox"
                                                     Padding="{TemplateBinding Padding}"
                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Background="{TemplateBinding Background}"
                                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="AllowDrop" Value="True" />
                                                        <Setter Property="MinWidth" Value="0" />
                                                        <Setter Property="MinHeight" Value="0" />
                                                        <Setter Property="Padding" Value="10,6" />
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                                  Padding="{TemplateBinding Padding}"
                                                                                  Background="Transparent"
                                                                                  Focusable="False"
                                                                                  HorizontalScrollBarVisibility="Hidden"
                                                                                  VerticalScrollBarVisibility="Hidden" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </Border>
                                        <Button x:Name="ButtonClear"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Width="16"
                                                Margin="0,0,26,0"
                                                Padding="0,6"
                                                interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                Command="interactivity:ControlCommands.Clear"
                                                Foreground="{TemplateBinding BorderBrush}"
                                                Visibility="Collapsed">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ContentControl Margin="{TemplateBinding Padding}"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                        <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                              Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                              Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="True"
                                                                              Stretch="Uniform" />
                                                                    </ContentControl>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <interactivity:SimplePanel>
                                                                            <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <StackPanel Margin="{TemplateBinding Padding}"
                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                            Orientation="Horizontal">
                                                                                    <Path x:Name="PathMain"
                                                                                          Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                    <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                      Margin="6,0,0,0"
                                                                                                      VerticalAlignment="Center"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </interactivity:SimplePanel>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                                <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                            </Trigger>
                                                                            <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Height" Value="30" />
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                    <Setter Property="BorderThickness" Value="0" />
                                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                    <Style.BasedOn>
                                                                        <Style TargetType="{x:Type Control}">
                                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                            <Setter Property="FontSize" Value="12" />
                                                                            <Setter Property="FocusVisualStyle">
                                                                                <Setter.Value>
                                                                                    <Style>
                                                                                        <Setter Property="Control.Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate>
                                                                                                    <Rectangle RadiusX="4" RadiusY="4">
                                                                                                        <Rectangle.Style>
                                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                                <Setter Property="Margin" Value="-2" />
                                                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                <Setter Property="StrokeThickness" Value="2" />
                                                                                                                <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                            </Style>
                                                                                                        </Rectangle.Style>
                                                                                                    </Rectangle>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Style.BasedOn>
                                                                </Style>
                                                            </Style.BasedOn>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" Value="0.9" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                            <Setter TargetName="dropDownBorder_AutoComplete" Property="Height" Value="95" />
                                        </Trigger>
                                        <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                            <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder_AutoComplete" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder_AutoComplete" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="True" />
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </MultiTrigger>
                                        <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                        </Trigger>
                                        <Trigger SourceName="DropDownScrollViewer_AutoComplete" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                            <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </MultiTrigger>
                                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <Trigger Property="IsError" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                            <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEditable" Value="True" />
                            <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="StoryboardHidden">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,4"
                                                                Duration="0" />
                                        </Storyboard>
                                        <Storyboard x:Key="StoryboardShow">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,-18"
                                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="templateRoot"
                                          MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" MinWidth="30" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Height>
                                            <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <interactivity:Double2GridLengthConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </Grid.Height>
                                        <StackPanel Margin="0,7,6,7"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Orientation="Horizontal">
                                            <StackPanel.Visibility>
                                                <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <interactivity:String2VisibilityConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </StackPanel.Visibility>
                                            <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ContentPresenter Margin="4,0,0,0"
                                                              Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextElement.Foreground="{DynamicResource DangerBrush}">
                                                <ContentPresenter.Visibility>
                                                    <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ContentPresenter.Visibility>
                                            </ContentPresenter>
                                        </StackPanel>
                                        <Popup x:Name="PART_Popup"
                                               Grid.Column="1"
                                               Grid.ColumnSpan="2"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                               Placement="Bottom"
                                               PopupAnimation="Slide">
                                            <Border x:Name="dropDownBorder"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{DynamicResource RegionBrush}"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <TextBlock x:Name="TextBlockError"
                                                   Grid.Column="1"
                                                   Grid.ColumnSpan="2"
                                                   Margin="9,0,0,4"
                                                   VerticalAlignment="Bottom"
                                                   Foreground="{DynamicResource DangerBrush}"
                                                   Text="{TemplateBinding ErrorStr}" />
                                        <ToggleButton x:Name="toggleButton"
                                                      Grid.Column="1"
                                                      Grid.ColumnSpan="2"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="ClickMode" Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="30" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Grid.ColumnSpan="2"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                            SnapsToDevicePixels="True" />
                                                                    <Path x:Name="arrow"
                                                                          Grid.Column="1"
                                                                          Margin="7"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                          Fill="{TemplateBinding BorderBrush}"
                                                                          Stretch="Uniform" />
                                                                    <Border Grid.Column="0" Margin="1">
                                                                        <Border.Visibility>
                                                                            <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                <Binding.Converter>
                                                                                    <interactivity:String2VisibilityReConverter />
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Border.Visibility>
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          Focusable="False"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="border"
                                                Grid.Column="1"
                                                Margin="-1,1"
                                                Background="Transparent">
                                            <TextBox x:Name="PART_EditableTextBox"
                                                     Padding="{TemplateBinding Padding}"
                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Background="{TemplateBinding Background}"
                                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="AllowDrop" Value="True" />
                                                        <Setter Property="MinWidth" Value="0" />
                                                        <Setter Property="MinHeight" Value="0" />
                                                        <Setter Property="Padding" Value="10,6" />
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                                  Padding="{TemplateBinding Padding}"
                                                                                  Background="Transparent"
                                                                                  Focusable="False"
                                                                                  HorizontalScrollBarVisibility="Hidden"
                                                                                  VerticalScrollBarVisibility="Hidden" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </Border>
                                        <Button x:Name="ButtonClear"
                                                Grid.Column="2"
                                                Width="16"
                                                Margin="0,0,26,0"
                                                Padding="0,6"
                                                interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                Command="interactivity:ControlCommands.Clear"
                                                Foreground="{TemplateBinding BorderBrush}"
                                                Visibility="Collapsed">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ContentControl Margin="{TemplateBinding Padding}"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                        <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                              Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                              Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="True"
                                                                              Stretch="Uniform" />
                                                                    </ContentControl>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <interactivity:SimplePanel>
                                                                            <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <StackPanel Margin="{TemplateBinding Padding}"
                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                            Orientation="Horizontal">
                                                                                    <Path x:Name="PathMain"
                                                                                          Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                    <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                      Margin="6,0,0,0"
                                                                                                      VerticalAlignment="Center"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </interactivity:SimplePanel>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                                <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                            </Trigger>
                                                                            <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Height" Value="30" />
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                    <Setter Property="BorderThickness" Value="0" />
                                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                    <Style.BasedOn>
                                                                        <Style TargetType="{x:Type Control}">
                                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                            <Setter Property="FontSize" Value="12" />
                                                                            <Setter Property="FocusVisualStyle">
                                                                                <Setter.Value>
                                                                                    <Style>
                                                                                        <Setter Property="Control.Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate>
                                                                                                    <Rectangle RadiusX="4" RadiusY="4">
                                                                                                        <Rectangle.Style>
                                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                                <Setter Property="Margin" Value="-2" />
                                                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                <Setter Property="StrokeThickness" Value="2" />
                                                                                                                <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                            </Style>
                                                                                                        </Rectangle.Style>
                                                                                                    </Rectangle>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Style.BasedOn>
                                                                </Style>
                                                            </Style.BasedOn>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" Value="0.9" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                        </Trigger>
                                        <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                            <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="True" />
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </MultiTrigger>
                                        <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </MultiTrigger>
                                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <Trigger Property="IsError" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                            <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEditable" Value="True" />
                            <Condition Property="interactivity:TitleElement.TitleAlignment" Value="Left" />
                            <Condition Property="AutoComplete" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type interactivity:ComboBox}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="StoryboardHidden">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,4"
                                                                Duration="0" />
                                        </Storyboard>
                                        <Storyboard x:Key="StoryboardShow">
                                            <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="9,0,0,-18"
                                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="templateRoot"
                                          MinHeight="{Binding (interactivity:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding (interactivity:TitleElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" MinWidth="30" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Height>
                                            <Binding Path="(interactivity:InfoElement.ContentHeight)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <interactivity:Double2GridLengthConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </Grid.Height>
                                        <StackPanel Margin="0,7,6,7"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Orientation="Horizontal">
                                            <StackPanel.Visibility>
                                                <Binding Path="(interactivity:TitleElement.Title)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <interactivity:String2VisibilityConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </StackPanel.Visibility>
                                            <TextBlock Text="{Binding (interactivity:TitleElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <ContentPresenter Margin="4,0,0,0"
                                                              Content="{Binding (interactivity:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextElement.Foreground="{DynamicResource DangerBrush}">
                                                <ContentPresenter.Visibility>
                                                    <Binding Path="(interactivity:InfoElement.Necessary)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter />
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ContentPresenter.Visibility>
                                            </ContentPresenter>
                                        </StackPanel>
                                        <Popup x:Name="PART_Popup"
                                               Grid.Column="1"
                                               Grid.ColumnSpan="2"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                               Placement="Bottom"
                                               PopupAnimation="Slide">
                                            <Border x:Name="dropDownBorder"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{DynamicResource RegionBrush}"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <Popup x:Name="PART_Popup_AutoComplete"
                                               Grid.Column="1"
                                               Grid.ColumnSpan="2"
                                               AllowsTransparency="True"
                                               Placement="Bottom"
                                               PopupAnimation="Slide">
                                            <Border x:Name="dropDownBorder_AutoComplete"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="{DynamicResource RegionBrush}"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer_AutoComplete" Margin="0,4">
                                                    <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="opaqueRect_AutoComplete"
                                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder_AutoComplete}"
                                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder_AutoComplete}"
                                                                       Fill="{Binding Background, ElementName=dropDownBorder_AutoComplete}" />
                                                        </Canvas>
                                                        <StackPanel x:Name="PART_AutoCompletePanel"
                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </interactivity:SimplePanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                        <TextBlock x:Name="TextBlockError"
                                                   Grid.Column="1"
                                                   Grid.ColumnSpan="2"
                                                   Margin="9,0,0,4"
                                                   VerticalAlignment="Bottom"
                                                   Foreground="{DynamicResource DangerBrush}"
                                                   Text="{TemplateBinding ErrorStr}" />
                                        <ToggleButton x:Name="toggleButton"
                                                      Grid.Column="1"
                                                      Grid.ColumnSpan="2"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{Binding (interactivity:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="ClickMode" Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="30" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Grid.ColumnSpan="2"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                            SnapsToDevicePixels="True" />
                                                                    <Path x:Name="arrow"
                                                                          Grid.Column="1"
                                                                          Margin="7"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                          Fill="{TemplateBinding BorderBrush}"
                                                                          Stretch="Uniform" />
                                                                    <Border Grid.Column="0" Margin="1">
                                                                        <Border.Visibility>
                                                                            <Binding Path="Text" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                                <Binding.Converter>
                                                                                    <interactivity:String2VisibilityReConverter />
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Border.Visibility>
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          Focusable="False"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.4" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="border"
                                                Grid.Column="1"
                                                Margin="-1,1"
                                                Background="Transparent">
                                            <TextBox x:Name="PART_EditableTextBox"
                                                     Padding="{TemplateBinding Padding}"
                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Background="{TemplateBinding Background}"
                                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="AllowDrop" Value="True" />
                                                        <Setter Property="MinWidth" Value="0" />
                                                        <Setter Property="MinHeight" Value="0" />
                                                        <Setter Property="Padding" Value="10,6" />
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                                  Padding="{TemplateBinding Padding}"
                                                                                  Background="Transparent"
                                                                                  Focusable="False"
                                                                                  HorizontalScrollBarVisibility="Hidden"
                                                                                  VerticalScrollBarVisibility="Hidden" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </Border>
                                        <Button x:Name="ButtonClear"
                                                Grid.Column="2"
                                                Width="16"
                                                Margin="0,0,26,0"
                                                Padding="0,6"
                                                interactivity:IconElement.Geometry="M7.4038057,6.4038057C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123L10.585787,12 6.6966991,15.889088C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301L12,13.414213 15.889088,17.303301C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088L13.414213,12 17.303301,8.1109123C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991L12,10.585787 8.1109123,6.6966991C7.9156504,6.5014372,7.6597281,6.4038057,7.4038057,6.4038057z M12,0C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0z"
                                                Command="interactivity:ControlCommands.Clear"
                                                Foreground="{TemplateBinding BorderBrush}"
                                                Visibility="Collapsed">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ContentControl Margin="{TemplateBinding Padding}"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                        <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                              Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                              Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              SnapsToDevicePixels="True"
                                                                              Stretch="Uniform" />
                                                                    </ContentControl>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <interactivity:SimplePanel>
                                                                            <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                <StackPanel Margin="{TemplateBinding Padding}"
                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                            Orientation="Horizontal">
                                                                                    <Path x:Name="PathMain"
                                                                                          Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                    <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                      Margin="6,0,0,0"
                                                                                                      VerticalAlignment="Center"
                                                                                                      Content="{TemplateBinding Content}"
                                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                      RecognizesAccessKey="True"
                                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </StackPanel>
                                                                            </Border>
                                                                        </interactivity:SimplePanel>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                                <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                            </Trigger>
                                                                            <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Height" Value="30" />
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                    <Setter Property="BorderThickness" Value="0" />
                                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                    <Style.BasedOn>
                                                                        <Style TargetType="{x:Type Control}">
                                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                            <Setter Property="FontSize" Value="12" />
                                                                            <Setter Property="FocusVisualStyle">
                                                                                <Setter.Value>
                                                                                    <Style>
                                                                                        <Setter Property="Control.Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate>
                                                                                                    <Rectangle RadiusX="4" RadiusY="4">
                                                                                                        <Rectangle.Style>
                                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                                <Setter Property="Margin" Value="-2" />
                                                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                <Setter Property="StrokeThickness" Value="2" />
                                                                                                                <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                            </Style>
                                                                                                        </Rectangle.Style>
                                                                                                    </Rectangle>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Style.BasedOn>
                                                                </Style>
                                                            </Style.BasedOn>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" Value="0.9" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                            <Setter TargetName="dropDownBorder_AutoComplete" Property="Height" Value="95" />
                                        </Trigger>
                                        <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                            <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder_AutoComplete" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            <Setter TargetName="dropDownBorder_AutoComplete" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="True" />
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </MultiTrigger>
                                        <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                        </Trigger>
                                        <Trigger SourceName="DropDownScrollViewer_AutoComplete" Property="CanContentScroll" Value="False">
                                            <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                            <Setter TargetName="opaqueRect_AutoComplete" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer_AutoComplete}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </MultiTrigger>
                                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition SourceName="ButtonClear" Property="IsMouseOver" Value="True" />
                                                <Condition Property="ShowClearButton" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <Trigger Property="IsError" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,-18"
                                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="9,0,0,4"
                                                                            Duration="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                                            <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Storyboard2">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard1">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        Grid.Row="0"
                                                        Grid.RowSpan="2"
                                                        Grid.Column="0"
                                                        Grid.ColumnSpan="2"
                                                        Margin="{TemplateBinding Padding}"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        CanHorizontallyScroll="False"
                                                        CanVerticallyScroll="False"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           AutomationProperties.AutomationId="VerticalScrollBar"
                                           Cursor="Arrow"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           Minimum="0"
                                           Opacity="0"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollBar.Style>
                                        <Style TargetType="{x:Type ScrollBar}">
                                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="Width" Value="38" />
                                            <Setter Property="MinWidth" Value="18" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                        <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                            <Border Background="{TemplateBinding Background}" />
                                                            <Track x:Name="PART_Track"
                                                                   IsDirectionReversed="True"
                                                                   IsEnabled="{TemplateBinding IsMouseOver}">
                                                                <Track.DecreaseRepeatButton>
                                                                    <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                <Setter Property="Focusable" Value="False" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                       Height="{TemplateBinding Height}"
                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.DecreaseRepeatButton>
                                                                <Track.IncreaseRepeatButton>
                                                                    <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                <Setter Property="Focusable" Value="False" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                       Height="{TemplateBinding Height}"
                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.IncreaseRepeatButton>
                                                                <Track.Thumb>
                                                                    <Thumb Background="{TemplateBinding Foreground}">
                                                                        <Thumb.Style>
                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                            <ControlTemplate.Resources>
                                                                                                <Storyboard x:Key="Storyboard2">
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="12" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="11" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="11" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                                <Storyboard x:Key="Storyboard1">
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </ControlTemplate.Resources>
                                                                                            <Border Width="{TemplateBinding Width}" Background="Transparent">
                                                                                                <Rectangle x:Name="rectangle"
                                                                                                           Width="38"
                                                                                                           Height="{TemplateBinding Height}"
                                                                                                           HorizontalAlignment="Right"
                                                                                                           Fill="{TemplateBinding Background}"
                                                                                                           RadiusX="34"
                                                                                                           RadiusY="34"
                                                                                                           SnapsToDevicePixels="True">
                                                                                                    <Rectangle.RenderTransform>
                                                                                                        <TransformGroup>
                                                                                                            <TranslateTransform X="0" />
                                                                                                        </TransformGroup>
                                                                                                    </Rectangle.RenderTransform>
                                                                                                </Rectangle>
                                                                                            </Border>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsDragging" Value="True">
                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                </Trigger>
                                                                                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                    <BeginStoryboard>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="38" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="34" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="34" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </BeginStoryboard>
                                                                                                </EventTrigger>
                                                                                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                    <BeginStoryboard>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="38" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="34" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="34" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </BeginStoryboard>
                                                                                                </EventTrigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Thumb.Style>
                                                                    </Thumb>
                                                                </Track.Thumb>
                                                            </Track>
                                                        </interactivity:SimplePanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="Orientation" Value="Horizontal">
                                                    <Setter Property="Width" Value="Auto" />
                                                    <Setter Property="MinWidth" Value="0" />
                                                    <Setter Property="Height" Value="8" />
                                                    <Setter Property="MinHeight" Value="8" />
                                                    <Setter Property="BorderThickness" Value="0,1" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                    <Border Background="{TemplateBinding Background}" />
                                                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                               Height="{TemplateBinding Height}"
                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                               Height="{TemplateBinding Height}"
                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <Thumb Background="{TemplateBinding Foreground}">
                                                                                <Thumb.Style>
                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                    <ControlTemplate.Resources>
                                                                                                        <Storyboard x:Key="Storyboard2">
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                        <Storyboard x:Key="Storyboard1">
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </ControlTemplate.Resources>
                                                                                                    <Border Height="{TemplateBinding Height}" Background="Transparent">
                                                                                                        <Rectangle x:Name="rectangle"
                                                                                                                   Width="{TemplateBinding Width}"
                                                                                                                   Height="2"
                                                                                                                   VerticalAlignment="Bottom"
                                                                                                                   Fill="{TemplateBinding Background}"
                                                                                                                   RadiusX="4"
                                                                                                                   RadiusY="4"
                                                                                                                   SnapsToDevicePixels="True">
                                                                                                            <Rectangle.RenderTransform>
                                                                                                                <TransformGroup>
                                                                                                                    <TranslateTransform Y="-2" />
                                                                                                                </TransformGroup>
                                                                                                            </Rectangle.RenderTransform>
                                                                                                        </Rectangle>
                                                                                                    </Border>
                                                                                                    <ControlTemplate.Triggers>
                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                        </Trigger>
                                                                                                        <Trigger Property="IsDragging" Value="True">
                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                        </Trigger>
                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                            <BeginStoryboard>
                                                                                                                <Storyboard>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </BeginStoryboard>
                                                                                                        </EventTrigger>
                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                            <BeginStoryboard>
                                                                                                                <Storyboard>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </BeginStoryboard>
                                                                                                        </EventTrigger>
                                                                                                    </ControlTemplate.Triggers>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Thumb.Style>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                </interactivity:SimplePanel>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ScrollBar.Style>
                                </ScrollBar>
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           AutomationProperties.AutomationId="HorizontalScrollBar"
                                           Cursor="Arrow"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           Minimum="0"
                                           Opacity="0"
                                           Orientation="Horizontal"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollBar.Style>
                                        <Style TargetType="{x:Type ScrollBar}">
                                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="Width" Value="8" />
                                            <Setter Property="MinWidth" Value="8" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                        <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                            <Border Background="{TemplateBinding Background}" />
                                                            <Track x:Name="PART_Track"
                                                                   IsDirectionReversed="True"
                                                                   IsEnabled="{TemplateBinding IsMouseOver}">
                                                                <Track.DecreaseRepeatButton>
                                                                    <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                <Setter Property="Focusable" Value="False" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                       Height="{TemplateBinding Height}"
                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.DecreaseRepeatButton>
                                                                <Track.IncreaseRepeatButton>
                                                                    <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                <Setter Property="Focusable" Value="False" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                       Height="{TemplateBinding Height}"
                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.IncreaseRepeatButton>
                                                                <Track.Thumb>
                                                                    <Thumb Background="{TemplateBinding Foreground}">
                                                                        <Thumb.Style>
                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                            <ControlTemplate.Resources>
                                                                                                <Storyboard x:Key="Storyboard2">
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                                <Storyboard x:Key="Storyboard1">
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </ControlTemplate.Resources>
                                                                                            <Border Width="{TemplateBinding Width}" Background="Transparent">
                                                                                                <Rectangle x:Name="rectangle"
                                                                                                           Width="2"
                                                                                                           Height="{TemplateBinding Height}"
                                                                                                           HorizontalAlignment="Right"
                                                                                                           Fill="{TemplateBinding Background}"
                                                                                                           RadiusX="1"
                                                                                                           RadiusY="1"
                                                                                                           SnapsToDevicePixels="True">
                                                                                                    <Rectangle.RenderTransform>
                                                                                                        <TransformGroup>
                                                                                                            <TranslateTransform X="-2" />
                                                                                                        </TransformGroup>
                                                                                                    </Rectangle.RenderTransform>
                                                                                                </Rectangle>
                                                                                            </Border>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsDragging" Value="True">
                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                </Trigger>
                                                                                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                    <BeginStoryboard>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </BeginStoryboard>
                                                                                                </EventTrigger>
                                                                                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                    <BeginStoryboard>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </BeginStoryboard>
                                                                                                </EventTrigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Thumb.Style>
                                                                    </Thumb>
                                                                </Track.Thumb>
                                                            </Track>
                                                        </interactivity:SimplePanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="Orientation" Value="Horizontal">
                                                    <Setter Property="Width" Value="Auto" />
                                                    <Setter Property="MinWidth" Value="0" />
                                                    <Setter Property="Height" Value="8" />
                                                    <Setter Property="MinHeight" Value="8" />
                                                    <Setter Property="BorderThickness" Value="0,1" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                    <Border Background="{TemplateBinding Background}" />
                                                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                               Height="{TemplateBinding Height}"
                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                               Height="{TemplateBinding Height}"
                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <Thumb Background="{TemplateBinding Foreground}">
                                                                                <Thumb.Style>
                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                    <ControlTemplate.Resources>
                                                                                                        <Storyboard x:Key="Storyboard2">
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                        <Storyboard x:Key="Storyboard1">
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </ControlTemplate.Resources>
                                                                                                    <Border Height="{TemplateBinding Height}" Background="Transparent">
                                                                                                        <Rectangle x:Name="rectangle"
                                                                                                                   Width="{TemplateBinding Width}"
                                                                                                                   Height="2"
                                                                                                                   VerticalAlignment="Bottom"
                                                                                                                   Fill="{TemplateBinding Background}"
                                                                                                                   RadiusX="4"
                                                                                                                   RadiusY="4"
                                                                                                                   SnapsToDevicePixels="True">
                                                                                                            <Rectangle.RenderTransform>
                                                                                                                <TransformGroup>
                                                                                                                    <TranslateTransform Y="-2" />
                                                                                                                </TransformGroup>
                                                                                                            </Rectangle.RenderTransform>
                                                                                                        </Rectangle>
                                                                                                    </Border>
                                                                                                    <ControlTemplate.Triggers>
                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                        </Trigger>
                                                                                                        <Trigger Property="IsDragging" Value="True">
                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                        </Trigger>
                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                            <BeginStoryboard>
                                                                                                                <Storyboard>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </BeginStoryboard>
                                                                                                        </EventTrigger>
                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                            <BeginStoryboard>
                                                                                                                <Storyboard>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </BeginStoryboard>
                                                                                                        </EventTrigger>
                                                                                                    </ControlTemplate.Triggers>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Thumb.Style>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                </interactivity:SimplePanel>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ScrollBar.Style>
                                </ScrollBar>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.2" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.2" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="GridLinesVisibility" Value="None" />
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="EnableRowVirtualization" Value="True" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                            <Setter Property="Padding" Value="12,6,12,12" />
                            <Setter Property="MinHeight" Value="44" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                        <interactivity:SimplePanel>
                                            <Border Padding="{TemplateBinding Padding}"
                                                    Background="Transparent"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter VerticalAlignment="Center"
                                                                      Content="{TemplateBinding Content}"
                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      RecognizesAccessKey="True"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    <ToggleButton x:Name="ToggleButtonSortDirection"
                                                                  Grid.Column="1"
                                                                  Width="20"
                                                                  Height="Auto"
                                                                  Padding="4,0"
                                                                  VerticalAlignment="Center"
                                                                  interactivity:IconElement.Geometry="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                  interactivity:IconSwitchElement.GeometrySelected="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z"
                                                                  Foreground="{DynamicResource PrimaryBrush}"
                                                                  IsEnabled="False"
                                                                  Opacity="1">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                                                <ContentControl Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                    <Path x:Name="PathIcon"
                                                                                          Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                          Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                          Fill="{TemplateBinding Foreground}"
                                                                                          SnapsToDevicePixels="True"
                                                                                          Stretch="Uniform" />
                                                                                </ContentControl>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="PathIcon" Property="Data" Value="{Binding (interactivity:IconSwitchElement.GeometrySelected), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.BasedOn>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                        <Setter Property="Width" Value="30" />
                                                                        <Setter Property="Height" Value="30" />
                                                                        <Setter Property="Padding" Value="8" />
                                                                        <Setter Property="interactivity:IconElement.Geometry" Value="{x:Null}" />
                                                                        <Setter Property="interactivity:IconSwitchElement.GeometrySelected" Value="{x:Null}" />
                                                                        <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                        <Setter Property="BorderThickness" Value="0" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <interactivity:SimplePanel>
                                                                                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <ContentControl Margin="{TemplateBinding Padding}"
                                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                                <Path x:Name="PathIcon"
                                                                                                      Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                                      SnapsToDevicePixels="True"
                                                                                                      Stretch="Uniform" />
                                                                                            </ContentControl>
                                                                                        </Border>
                                                                                        <Border x:Name="BorderChecked"
                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                BorderThickness="4"
                                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                Visibility="Collapsed" />
                                                                                    </interactivity:SimplePanel>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter TargetName="PathIcon" Property="Data" Value="{Binding (interactivity:IconSwitchElement.GeometrySelected), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type Control}">
                                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                <Setter Property="FontSize" Value="12" />
                                                                                <Setter Property="FocusVisualStyle">
                                                                                    <Setter.Value>
                                                                                        <Style>
                                                                                            <Setter Property="Control.Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate>
                                                                                                        <Rectangle RadiusX="4" RadiusY="4">
                                                                                                            <Rectangle.Style>
                                                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                                                    <Setter Property="Margin" Value="-2" />
                                                                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                                                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                    <Setter Property="StrokeThickness" Value="2" />
                                                                                                                    <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                </Style>
                                                                                                            </Rectangle.Style>
                                                                                                        </Rectangle>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" Value="0.9" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" Value="0.6" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" Value="0.4" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Style.BasedOn>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                </Grid>
                                            </Border>
                                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="Width" Value="8" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Cursor" Value="SizeWE" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="Width" Value="8" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Cursor" Value="SizeWE" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </interactivity:SimplePanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="SortDirection" Value="{x:Null}">
                                                <Setter TargetName="ToggleButtonSortDirection" Property="Visibility" Value="Collapsed" />
                                            </Trigger>
                                            <Trigger Property="SortDirection" Value="Ascending">
                                                <Setter TargetName="ToggleButtonSortDirection" Property="IsChecked" Value="True" />
                                            </Trigger>
                                            <Trigger Property="SortDirection" Value="Descending">
                                                <Setter TargetName="ToggleButtonSortDirection" Property="IsChecked" Value="False" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type DataGridRowHeader}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                                        <interactivity:SimplePanel HorizontalAlignment="Center">
                                            <Border Padding="{TemplateBinding Padding}"
                                                    Background="Transparent"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <StackPanel Orientation="Horizontal">
                                                    <ContentPresenter VerticalAlignment="Center"
                                                                      Content="{TemplateBinding Content}"
                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      RecognizesAccessKey="True"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </StackPanel>
                                            </Border>
                                            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="Height" Value="8" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Cursor" Value="SizeNS" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="Height" Value="8" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Cursor" Value="SizeNS" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </interactivity:SimplePanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="Margin" Value="0,0,0,4" />
                            <Setter Property="Padding" Value="0,6" />
                            <Setter Property="MinHeight" Value="44" />
                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                            <Setter Property="ValidationErrorTemplate">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBlock Margin="2,0,0,0"
                                                   VerticalAlignment="Center"
                                                   Foreground="Red"
                                                   Text="!"><Run Text="!" /></TextBlock>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                                        <SelectiveScrollingGrid>
                                            <SelectiveScrollingGrid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </SelectiveScrollingGrid.ColumnDefinitions>
                                            <SelectiveScrollingGrid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </SelectiveScrollingGrid.RowDefinitions>
                                            <Border x:Name="DGR_Border"
                                                    Grid.ColumnSpan="2"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="4"
                                                    SnapsToDevicePixels="True" />
                                            <DataGridCellsPresenter Grid.Row="0"
                                                                    Grid.Column="1"
                                                                    MinHeight="{TemplateBinding MinHeight}"
                                                                    VerticalContentAlignment="Center"
                                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <DataGridDetailsPresenter Grid.Row="1"
                                                                      Grid.Column="1"
                                                                      Margin="0,6"
                                                                      Visibility="{TemplateBinding DetailsVisibility}">
                                                <SelectiveScrollingGrid.SelectiveScrollingOrientation>
                                                    <Binding Path="AreRowDetailsFrozen" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                        <Binding.ConverterParameter>
                                                            <SelectiveScrollingOrientation>Vertical</SelectiveScrollingOrientation>
                                                        </Binding.ConverterParameter>
                                                    </Binding>
                                                </SelectiveScrollingGrid.SelectiveScrollingOrientation>
                                            </DataGridDetailsPresenter>
                                            <DataGridRowHeader Grid.Row="0"
                                                               Grid.Column="0"
                                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical">
                                                <DataGridRowHeader.Visibility>
                                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                        <Binding.ConverterParameter>
                                                            <DataGridHeadersVisibility>Row</DataGridHeadersVisibility>
                                                        </Binding.ConverterParameter>
                                                    </Binding>
                                                </DataGridRowHeader.Visibility>
                                            </DataGridRowHeader>
                                        </SelectiveScrollingGrid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2"
                                                               Opacity="0.6"
                                                               RadiusX="4"
                                                               RadiusY="4"
                                                               SnapsToDevicePixels="True"
                                                               Stroke="{DynamicResource SecondaryBorderBrush}"
                                                               StrokeDashArray="1 1"
                                                               StrokeThickness="2" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="Padding" Value="10,6" />
                            <Setter Property="Margin" Value="0,0,4,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Border Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="4"
                                                SnapsToDevicePixels="True">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Content="{TemplateBinding Content}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" Value="Cell" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}}" Value="False" />
                                        <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" Value="CellOrRowHeader" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}}" Value="True" />
                                        <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" Value="CellOrRowHeader" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" Value="FullRow" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                </MultiDataTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="6" />
                <Setter Property="ColumnWidth" Value="*" />
                <Setter Property="interactivity:DataGridAttach.TextColumnStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="interactivity:DataGridAttach.EditingTextColumnStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="MinHeight" Value="30" />
                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="AllowDrop" Value="True" />
                            <Setter Property="Padding" Value="8,6" />
                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border x:Name="border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                SnapsToDevicePixels="True">
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          Margin="-2,0,-1,0"
                                                          Padding="{TemplateBinding Padding}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Focusable="False"
                                                          HorizontalScrollBarVisibility="Hidden"
                                                          VerticalScrollBarVisibility="Hidden" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="interactivity:DataGridAttach.ComboBoxColumnStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Focusable" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <TextBlock IsHitTestVisible="False"
                                                   Text="{TemplateBinding Text}"
                                                   TextTrimming="CharacterEllipsis" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="interactivity:DataGridAttach.EditingComboBoxColumnStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                            <Setter Property="ItemContainerStyle">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="Padding" Value="10,6" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="MinHeight" Value="30" />
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                    <Border x:Name="Bd"
                                                            Padding="{TemplateBinding Padding}"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            SnapsToDevicePixels="True">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected" Value="False" />
                                                                <Condition Property="IsMouseOver" Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected" Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                            <Setter Property="Foreground" Value="White" />
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                            <Setter Property="MinHeight" Value="30" />
                            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                            <Setter Property="Padding" Value="8,6" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="30" />
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup"
                                                   Grid.ColumnSpan="2"
                                                   Margin="1"
                                                   AllowsTransparency="True"
                                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Placement="Bottom"
                                                   PopupAnimation="Slide">
                                                <Border x:Name="dropDownBorder"
                                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                        Background="{DynamicResource RegionBrush}"
                                                        BorderBrush="{DynamicResource BorderBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                        <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas Width="0"
                                                                    Height="0"
                                                                    HorizontalAlignment="Left"
                                                                    VerticalAlignment="Top">
                                                                <Rectangle x:Name="opaqueRect"
                                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </interactivity:SimplePanel>
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton"
                                                          Grid.Column="0"
                                                          Grid.ColumnSpan="2"
                                                          Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="ClickMode" Value="Press" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                            SnapsToDevicePixels="True">
                                                                        <Border Width="17"
                                                                                Margin="0,0,6,0"
                                                                                HorizontalAlignment="Right"
                                                                                BorderBrush="Transparent"
                                                                                BorderThickness="1"
                                                                                SnapsToDevicePixels="True">
                                                                            <Path x:Name="arrow"
                                                                                  Width="16"
                                                                                  Height="9"
                                                                                  HorizontalAlignment="Center"
                                                                                  VerticalAlignment="Center"
                                                                                  Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                  Fill="{TemplateBinding BorderBrush}" />
                                                                        </Border>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.4" />
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <Border Grid.Column="0" Margin="1,0">
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                  IsHitTestVisible="False"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                            </Trigger>
                                            <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="True" />
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                            </MultiTrigger>
                                            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                            </MultiTrigger>
                                            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                                                <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.4" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Style.Triggers>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Popup x:Name="PART_Popup"
                                                           Grid.ColumnSpan="2"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           PopupAnimation="Slide">
                                                        <Border x:Name="dropDownBorder"
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Background="{DynamicResource RegionBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,4">
                                                                <interactivity:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Width="0"
                                                                            Height="0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top">
                                                                        <Rectangle x:Name="opaqueRect"
                                                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </interactivity:SimplePanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                    <ToggleButton x:Name="toggleButton"
                                                                  Grid.Column="0"
                                                                  Grid.ColumnSpan="2"
                                                                  Background="{TemplateBinding Background}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="ClickMode" Value="Press" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                            <Border Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                                                    SnapsToDevicePixels="True">
                                                                                <Border Width="17"
                                                                                        Margin="0,0,6,0"
                                                                                        HorizontalAlignment="Right"
                                                                                        BorderBrush="Transparent"
                                                                                        BorderThickness="1"
                                                                                        SnapsToDevicePixels="True">
                                                                                    <Path x:Name="arrow"
                                                                                          Width="16"
                                                                                          Height="9"
                                                                                          HorizontalAlignment="Center"
                                                                                          VerticalAlignment="Center"
                                                                                          Data="M512,801.6896L5.12,282.0096 63.2832,222.4128 512,682.3936 960.7168,222.3104 1018.88,281.9072 512,801.6896z"
                                                                                          Fill="{TemplateBinding BorderBrush}" />
                                                                                </Border>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter TargetName="arrow" Property="Data" Value="M50.000001,0L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288z" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0.4" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <Border Grid.Column="0" Margin="-1,1">
                                                        <TextBox x:Name="PART_EditableTextBox"
                                                                 Padding="{TemplateBinding Padding}"
                                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                 Background="{TemplateBinding Background}"
                                                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <TextBox.Style>
                                                                <Style TargetType="{x:Type TextBox}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                    <Setter Property="AllowDrop" Value="True" />
                                                                    <Setter Property="MinWidth" Value="0" />
                                                                    <Setter Property="MinHeight" Value="0" />
                                                                    <Setter Property="Padding" Value="10,6" />
                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                <ScrollViewer x:Name="PART_ContentHost"
                                                                                              Padding="{TemplateBinding Padding}"
                                                                                              Background="Transparent"
                                                                                              Focusable="False"
                                                                                              HorizontalScrollBarVisibility="Hidden"
                                                                                              VerticalScrollBarVisibility="Hidden" />
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                                                    </Trigger>
                                                    <Trigger Property="interactivity:DropDownElement.ConsistentWidth" Value="True">
                                                        <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                        <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsGrouping" Value="True" />
                                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                                    </Trigger>
                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="True" />
                                                            <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                                    </MultiTrigger>
                                                    <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="interactivity:DataGridAttach.CheckBoxColumnStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="-4"
                                                               Opacity="0.6"
                                                               RadiusX="4"
                                                               RadiusY="4"
                                                               SnapsToDevicePixels="True"
                                                               Stroke="{DynamicResource SecondaryBorderBrush}"
                                                               StrokeDashArray="1 1"
                                                               StrokeThickness="2" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type CheckBox}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="StoryboardCheckedFalse">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="StoryboardCheckedTrue">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid x:Name="templateRoot"
                                              Background="Transparent"
                                              SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="checkBoxBorder"
                                                    Width="18"
                                                    Height="18"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="2" />
                                            <interactivity:SimplePanel x:Name="markGrid"
                                                                       Grid.Column="0"
                                                                       Width="18"
                                                                       Height="18">
                                                <Path x:Name="path"
                                                      Width="12"
                                                      Height="12"
                                                      Data="M0,2L3,5 8,0"
                                                      Stretch="Uniform"
                                                      Stroke="{DynamicResource TextIconBrush}"
                                                      StrokeDashArray="8 8"
                                                      StrokeDashOffset="8"
                                                      StrokeThickness="2"
                                                      UseLayoutRounding="True" />
                                                <Rectangle x:Name="indeterminateMark"
                                                           Margin="2"
                                                           Fill="{DynamicResource PrimaryBrush}"
                                                           Opacity="0"
                                                           RadiusX="2"
                                                           RadiusY="2" />
                                            </interactivity:SimplePanel>
                                            <ContentPresenter x:Name="contentPresenter"
                                                              Grid.Column="1"
                                                              Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Content="{TemplateBinding Content}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Focusable="False"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              Visibility="Collapsed" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasContent" Value="True">
                                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsChecked" Value="True" />
                                                    <Condition Property="IsPressed" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Opacity" Value="0.8" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsChecked" Value="False" />
                                                    <Condition Property="IsPressed" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource DarkPrimaryBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter TargetName="path" Property="Stroke" Value="{DynamicResource BorderBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="{x:Null}">
                                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.4" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusX="4" RadiusY="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2" />
                                                                        <Setter Property="Opacity" Value="0.6" />
                                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                        <Setter Property="StrokeThickness" Value="2" />
                                                                        <Setter Property="StrokeDashArray" Value="1 1" />
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="interactivity:DataGridAttach.EditingCheckBoxColumnStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="-4"
                                                               Opacity="0.6"
                                                               RadiusX="4"
                                                               RadiusY="4"
                                                               SnapsToDevicePixels="True"
                                                               Stroke="{DynamicResource SecondaryBorderBrush}"
                                                               StrokeDashArray="1 1"
                                                               StrokeThickness="2" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type CheckBox}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="StoryboardCheckedFalse">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="StoryboardCheckedTrue">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid x:Name="templateRoot"
                                              Background="Transparent"
                                              SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="checkBoxBorder"
                                                    Width="18"
                                                    Height="18"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="2" />
                                            <interactivity:SimplePanel x:Name="markGrid"
                                                                       Grid.Column="0"
                                                                       Width="18"
                                                                       Height="18">
                                                <Path x:Name="path"
                                                      Width="12"
                                                      Height="12"
                                                      Data="M0,2L3,5 8,0"
                                                      Stretch="Uniform"
                                                      Stroke="{DynamicResource TextIconBrush}"
                                                      StrokeDashArray="8 8"
                                                      StrokeDashOffset="8"
                                                      StrokeThickness="2"
                                                      UseLayoutRounding="True" />
                                                <Rectangle x:Name="indeterminateMark"
                                                           Margin="2"
                                                           Fill="{DynamicResource PrimaryBrush}"
                                                           Opacity="0"
                                                           RadiusX="2"
                                                           RadiusY="2" />
                                            </interactivity:SimplePanel>
                                            <ContentPresenter x:Name="contentPresenter"
                                                              Grid.Column="1"
                                                              Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Content="{TemplateBinding Content}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Focusable="False"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              Visibility="Collapsed" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasContent" Value="True">
                                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsChecked" Value="True" />
                                                    <Condition Property="IsPressed" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Opacity" Value="0.8" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsChecked" Value="False" />
                                                    <Condition Property="IsPressed" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource DarkPrimaryBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter TargetName="path" Property="Stroke" Value="{DynamicResource BorderBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="{x:Null}">
                                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.4" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusX="4" RadiusY="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2" />
                                                                        <Setter Property="Opacity" Value="0.6" />
                                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                        <Setter Property="StrokeThickness" Value="2" />
                                                                        <Setter Property="StrokeDashArray" Value="1 1" />
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="interactivity:DataGridAttach.ApplyDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Storyboard2">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard1">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Button Margin="0,0,0,6"
                                                        interactivity:IconElement.Geometry="M721.005,638.949C758.74,638.949 789.333,669.56 789.333,707.312 789.333,745.047 758.74,775.657 721.005,775.657 683.253,775.657 652.66,745.047 652.66,707.312 652.66,669.56 683.253,638.949 721.005,638.949z M512.017,638.949C549.77,638.949 580.38,669.56 580.38,707.312 580.38,745.047 549.77,775.657 512.017,775.657 474.265,775.657 443.672,745.047 443.672,707.312 443.672,669.56 474.265,638.949 512.017,638.949z M303.029,638.949C340.781,638.949 371.392,669.56 371.392,707.312 371.392,745.047 340.781,775.657 303.029,775.657 265.277,775.657 234.667,745.047 234.667,707.312 234.667,669.56 265.277,638.949 303.029,638.949z M721.005,443.655C758.74,443.655 789.333,474.265 789.333,512.017 789.333,549.769 758.74,580.363 721.005,580.363 683.253,580.363 652.66,549.769 652.66,512.017 652.66,474.265 683.253,443.655 721.005,443.655z M512.017,443.655C549.77,443.655 580.38,474.265 580.38,512.017 580.38,549.769 549.77,580.363 512.017,580.363 474.265,580.363 443.672,549.769 443.672,512.017 443.672,474.265 474.265,443.655 512.017,443.655z M303.029,443.655C340.781,443.655 371.392,474.265 371.392,512.017 371.392,549.769 340.781,580.363 303.029,580.363 265.277,580.363 234.667,549.769 234.667,512.017 234.667,474.265 265.277,443.655 303.029,443.655z M721.005,248.343C758.74,248.343 789.333,278.953 789.333,316.688 789.333,354.44 758.74,385.051 721.005,385.051 683.253,385.051 652.66,354.44 652.66,316.688 652.66,278.953 683.253,248.343 721.005,248.343z M512.017,248.343C549.77,248.343 580.38,278.953 580.38,316.688 580.38,354.44 549.77,385.051 512.017,385.051 474.265,385.051 443.672,354.44 443.672,316.688 443.672,278.953 474.265,248.343 512.017,248.343z M303.029,248.343C340.781,248.343 371.392,278.953 371.392,316.688 371.392,354.44 340.781,385.051 303.029,385.051 265.277,385.051 234.667,354.44 234.667,316.688 234.667,278.953 265.277,248.343 303.029,248.343z"
                                                        Command="ApplicationCommands.SelectAll"
                                                        Foreground="{DynamicResource PrimaryBrush}">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="interactivity:BorderElement.CornerRadius" Value="0" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Border Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                            <ContentControl Margin="{TemplateBinding Padding}"
                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                <Path Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                      Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                      Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                      SnapsToDevicePixels="True"
                                                                                      Stretch="Uniform" />
                                                                            </ContentControl>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                                                                    <Setter Property="interactivity:BorderElement.CornerRadius" Value="4" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <interactivity:SimplePanel>
                                                                                    <Border Background="{TemplateBinding Background}" CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            CornerRadius="{Binding (interactivity:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                                                        <StackPanel Margin="{TemplateBinding Padding}"
                                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                    Orientation="Horizontal">
                                                                                            <Path x:Name="PathMain"
                                                                                                  Width="{TemplateBinding interactivity:IconElement.Width}"
                                                                                                  Height="{TemplateBinding interactivity:IconElement.Height}"
                                                                                                  Data="{TemplateBinding interactivity:IconElement.Geometry}"
                                                                                                  Fill="{TemplateBinding Foreground}"
                                                                                                  SnapsToDevicePixels="True"
                                                                                                  Stretch="Uniform" />
                                                                                            <ContentPresenter x:Name="ContentPresenterMain"
                                                                                                              Margin="6,0,0,0"
                                                                                                              VerticalAlignment="Center"
                                                                                                              Content="{TemplateBinding Content}"
                                                                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                              RecognizesAccessKey="True"
                                                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                        </StackPanel>
                                                                                    </Border>
                                                                                </interactivity:SimplePanel>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="Content" Value="{x:Null}">
                                                                                        <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                                                                    </Trigger>
                                                                                    <Trigger Property="interactivity:IconElement.Geometry" Value="{x:Null}">
                                                                                        <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                                                                        <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.BasedOn>
                                                                        <Style TargetType="{x:Type ButtonBase}">
                                                                            <Setter Property="Height" Value="30" />
                                                                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                                                                            <Setter Property="Padding" Value="10,6" />
                                                                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                                                                            <Setter Property="BorderThickness" Value="0" />
                                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                                            <Setter Property="VerticalAlignment" Value="Center" />
                                                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                            <Style.BasedOn>
                                                                                <Style TargetType="{x:Type Control}">
                                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                    <Setter Property="FontSize" Value="12" />
                                                                                    <Setter Property="FocusVisualStyle">
                                                                                        <Setter.Value>
                                                                                            <Style>
                                                                                                <Setter Property="Control.Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate>
                                                                                                            <Rectangle RadiusX="4" RadiusY="4">
                                                                                                                <Rectangle.Style>
                                                                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                                                                        <Setter Property="Margin" Value="-2" />
                                                                                                                        <Setter Property="Opacity" Value="0.6" />
                                                                                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                                                                        <Setter Property="StrokeThickness" Value="2" />
                                                                                                                        <Setter Property="StrokeDashArray" Value="1 1" />
                                                                                                                    </Style>
                                                                                                                </Rectangle.Style>
                                                                                                            </Rectangle>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Style.BasedOn>
                                                                        </Style>
                                                                    </Style.BasedOn>
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Opacity" Value="0.9" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" Value="0.6" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" Value="0.4" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Style.BasedOn>
                                                        </Style>
                                                    </Button.Style>
                                                    <Button.Visibility>
                                                        <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                            <Binding.ConverterParameter>
                                                                <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Button.Visibility>
                                                    <Button.Width>
                                                        <Binding Path="CellsPanelHorizontalOffset" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                            <Binding.Converter>
                                                                <interactivity:DoubleMinConverter />
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Button.Width>
                                                </Button>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                                Grid.Row="0"
                                                                                Grid.Column="1"
                                                                                Grid.ColumnSpan="2">
                                                    <DataGridColumnHeadersPresenter.Visibility>
                                                        <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                            <Binding.ConverterParameter>
                                                                <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </DataGridColumnHeadersPresenter.Visibility>
                                                </DataGridColumnHeadersPresenter>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                        Grid.Row="1"
                                                                        Grid.Column="0"
                                                                        Grid.ColumnSpan="3"
                                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                        CanHorizontallyScroll="False"
                                                                        CanVerticallyScroll="False"
                                                                        Content="{TemplateBinding Content}"
                                                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                                           Grid.Row="1"
                                                           Grid.Column="2"
                                                           Maximum="{TemplateBinding ScrollableHeight}"
                                                           Opacity="0"
                                                           Orientation="Vertical"
                                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ScrollBar.Style>
                                                        <Style TargetType="{x:Type ScrollBar}">
                                                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Setter Property="Focusable" Value="False" />
                                                            <Setter Property="BorderThickness" Value="0" />
                                                            <Setter Property="Width" Value="8" />
                                                            <Setter Property="MinWidth" Value="18" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                        <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                            <Border Background="{TemplateBinding Background}" />
                                                                            <Track x:Name="PART_Track"
                                                                                   IsDirectionReversed="True"
                                                                                   IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                <Track.DecreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                                <Setter Property="Focusable" Value="False" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                                       Height="{TemplateBinding Height}"
                                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.DecreaseRepeatButton>
                                                                                <Track.IncreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                                <Setter Property="Focusable" Value="False" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                                       Height="{TemplateBinding Height}"
                                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.IncreaseRepeatButton>
                                                                                <Track.Thumb>
                                                                                    <Thumb Background="{TemplateBinding Foreground}">
                                                                                        <Thumb.Style>
                                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                            <ControlTemplate.Resources>
                                                                                                                <Storyboard x:Key="Storyboard2">
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="12" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="11" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="11" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                                <Storyboard x:Key="Storyboard1">
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </ControlTemplate.Resources>
                                                                                                            <Border Width="{TemplateBinding Width}" Background="Transparent">
                                                                                                                <Rectangle x:Name="rectangle"
                                                                                                                           Width="18"
                                                                                                                           Height="{TemplateBinding Height}"
                                                                                                                           HorizontalAlignment="Right"
                                                                                                                           Fill="{TemplateBinding Background}"
                                                                                                                           RadiusX="14"
                                                                                                                           RadiusY="14"
                                                                                                                           SnapsToDevicePixels="True">
                                                                                                                    <Rectangle.RenderTransform>
                                                                                                                        <TransformGroup>
                                                                                                                            <TranslateTransform X="0" />
                                                                                                                        </TransformGroup>
                                                                                                                    </Rectangle.RenderTransform>
                                                                                                                </Rectangle>
                                                                                                            </Border>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsDragging" Value="True">
                                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                                </Trigger>
                                                                                                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                    <BeginStoryboard>
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="18" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="14" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="14" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </BeginStoryboard>
                                                                                                                </EventTrigger>
                                                                                                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                    <BeginStoryboard>
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="18" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </BeginStoryboard>
                                                                                                                </EventTrigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Thumb.Style>
                                                                                    </Thumb>
                                                                                </Track.Thumb>
                                                                            </Track>
                                                                        </interactivity:SimplePanel>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="Orientation" Value="Horizontal">
                                                                    <Setter Property="Width" Value="Auto" />
                                                                    <Setter Property="MinWidth" Value="0" />
                                                                    <Setter Property="Height" Value="8" />
                                                                    <Setter Property="MinHeight" Value="8" />
                                                                    <Setter Property="BorderThickness" Value="0,1" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                                <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                                    <Border Background="{TemplateBinding Background}" />
                                                                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                        <Track.DecreaseRepeatButton>
                                                                                            <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                                <RepeatButton.Style>
                                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                                        <Setter Property="Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                                               Height="{TemplateBinding Height}"
                                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </RepeatButton.Style>
                                                                                            </RepeatButton>
                                                                                        </Track.DecreaseRepeatButton>
                                                                                        <Track.IncreaseRepeatButton>
                                                                                            <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                                <RepeatButton.Style>
                                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                                        <Setter Property="Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                                               Height="{TemplateBinding Height}"
                                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </RepeatButton.Style>
                                                                                            </RepeatButton>
                                                                                        </Track.IncreaseRepeatButton>
                                                                                        <Track.Thumb>
                                                                                            <Thumb Background="{TemplateBinding Foreground}">
                                                                                                <Thumb.Style>
                                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                                        <Setter Property="Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                    <ControlTemplate.Resources>
                                                                                                                        <Storyboard x:Key="Storyboard2">
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                        <Storyboard x:Key="Storyboard1">
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </ControlTemplate.Resources>
                                                                                                                    <Border Height="{TemplateBinding Height}" Background="Transparent">
                                                                                                                        <Rectangle x:Name="rectangle"
                                                                                                                                   Width="{TemplateBinding Width}"
                                                                                                                                   Height="2"
                                                                                                                                   VerticalAlignment="Bottom"
                                                                                                                                   Fill="{TemplateBinding Background}"
                                                                                                                                   RadiusX="4"
                                                                                                                                   RadiusY="4"
                                                                                                                                   SnapsToDevicePixels="True">
                                                                                                                            <Rectangle.RenderTransform>
                                                                                                                                <TransformGroup>
                                                                                                                                    <TranslateTransform Y="-2" />
                                                                                                                                </TransformGroup>
                                                                                                                            </Rectangle.RenderTransform>
                                                                                                                        </Rectangle>
                                                                                                                    </Border>
                                                                                                                    <ControlTemplate.Triggers>
                                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                                        </Trigger>
                                                                                                                        <Trigger Property="IsDragging" Value="True">
                                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                                        </Trigger>
                                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                            <BeginStoryboard>
                                                                                                                                <Storyboard>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </BeginStoryboard>
                                                                                                                        </EventTrigger>
                                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                            <BeginStoryboard>
                                                                                                                                <Storyboard>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </BeginStoryboard>
                                                                                                                        </EventTrigger>
                                                                                                                    </ControlTemplate.Triggers>
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </Thumb.Style>
                                                                                            </Thumb>
                                                                                        </Track.Thumb>
                                                                                    </Track>
                                                                                </interactivity:SimplePanel>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ScrollBar.Style>
                                                </ScrollBar>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                           Grid.Row="1"
                                                           Grid.Column="1"
                                                           VerticalAlignment="Bottom"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Opacity="0"
                                                           Orientation="Horizontal"
                                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ScrollBar.Style>
                                                        <Style TargetType="{x:Type ScrollBar}">
                                                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                            <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Setter Property="Focusable" Value="False" />
                                                            <Setter Property="BorderThickness" Value="0" />
                                                            <Setter Property="Width" Value="8" />
                                                            <Setter Property="MinWidth" Value="8" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                        <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                            <Border Background="{TemplateBinding Background}" />
                                                                            <Track x:Name="PART_Track"
                                                                                   IsDirectionReversed="True"
                                                                                   IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                <Track.DecreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                                <Setter Property="Focusable" Value="False" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                                       Height="{TemplateBinding Height}"
                                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.DecreaseRepeatButton>
                                                                                <Track.IncreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                                <Setter Property="Focusable" Value="False" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                                       Height="{TemplateBinding Height}"
                                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.IncreaseRepeatButton>
                                                                                <Track.Thumb>
                                                                                    <Thumb Background="{TemplateBinding Foreground}">
                                                                                        <Thumb.Style>
                                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                            <ControlTemplate.Resources>
                                                                                                                <Storyboard x:Key="Storyboard2">
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                                <Storyboard x:Key="Storyboard1">
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                </Storyboard>
                                                                                                            </ControlTemplate.Resources>
                                                                                                            <Border Width="{TemplateBinding Width}" Background="Transparent">
                                                                                                                <Rectangle x:Name="rectangle"
                                                                                                                           Width="2"
                                                                                                                           Height="{TemplateBinding Height}"
                                                                                                                           HorizontalAlignment="Right"
                                                                                                                           Fill="{TemplateBinding Background}"
                                                                                                                           RadiusX="1"
                                                                                                                           RadiusY="1"
                                                                                                                           SnapsToDevicePixels="True">
                                                                                                                    <Rectangle.RenderTransform>
                                                                                                                        <TransformGroup>
                                                                                                                            <TranslateTransform X="-2" />
                                                                                                                        </TransformGroup>
                                                                                                                    </Rectangle.RenderTransform>
                                                                                                                </Rectangle>
                                                                                                            </Border>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsDragging" Value="True">
                                                                                                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                                </Trigger>
                                                                                                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                    <BeginStoryboard>
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </BeginStoryboard>
                                                                                                                </EventTrigger>
                                                                                                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                    <BeginStoryboard>
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </BeginStoryboard>
                                                                                                                </EventTrigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Thumb.Style>
                                                                                    </Thumb>
                                                                                </Track.Thumb>
                                                                            </Track>
                                                                        </interactivity:SimplePanel>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="Orientation" Value="Horizontal">
                                                                    <Setter Property="Width" Value="Auto" />
                                                                    <Setter Property="MinWidth" Value="0" />
                                                                    <Setter Property="Height" Value="8" />
                                                                    <Setter Property="MinHeight" Value="8" />
                                                                    <Setter Property="BorderThickness" Value="0,1" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                                <interactivity:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                                    <Border Background="{TemplateBinding Background}" />
                                                                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                        <Track.DecreaseRepeatButton>
                                                                                            <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                                <RepeatButton.Style>
                                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                                        <Setter Property="Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                                               Height="{TemplateBinding Height}"
                                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </RepeatButton.Style>
                                                                                            </RepeatButton>
                                                                                        </Track.DecreaseRepeatButton>
                                                                                        <Track.IncreaseRepeatButton>
                                                                                            <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                                <RepeatButton.Style>
                                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                                        <Setter Property="Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                                               Height="{TemplateBinding Height}"
                                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </RepeatButton.Style>
                                                                                            </RepeatButton>
                                                                                        </Track.IncreaseRepeatButton>
                                                                                        <Track.Thumb>
                                                                                            <Thumb Background="{TemplateBinding Foreground}">
                                                                                                <Thumb.Style>
                                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                                        <Setter Property="Template">
                                                                                                            <Setter.Value>
                                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                    <ControlTemplate.Resources>
                                                                                                                        <Storyboard x:Key="Storyboard2">
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                        <Storyboard x:Key="Storyboard1">
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </ControlTemplate.Resources>
                                                                                                                    <Border Height="{TemplateBinding Height}" Background="Transparent">
                                                                                                                        <Rectangle x:Name="rectangle"
                                                                                                                                   Width="{TemplateBinding Width}"
                                                                                                                                   Height="2"
                                                                                                                                   VerticalAlignment="Bottom"
                                                                                                                                   Fill="{TemplateBinding Background}"
                                                                                                                                   RadiusX="4"
                                                                                                                                   RadiusY="4"
                                                                                                                                   SnapsToDevicePixels="True">
                                                                                                                            <Rectangle.RenderTransform>
                                                                                                                                <TransformGroup>
                                                                                                                                    <TranslateTransform Y="-2" />
                                                                                                                                </TransformGroup>
                                                                                                                            </Rectangle.RenderTransform>
                                                                                                                        </Rectangle>
                                                                                                                    </Border>
                                                                                                                    <ControlTemplate.Triggers>
                                                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                                        </Trigger>
                                                                                                                        <Trigger Property="IsDragging" Value="True">
                                                                                                                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                                        </Trigger>
                                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                            <BeginStoryboard>
                                                                                                                                <Storyboard>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </BeginStoryboard>
                                                                                                                        </EventTrigger>
                                                                                                                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                            <BeginStoryboard>
                                                                                                                                <Storyboard>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                                                                </Storyboard>
                                                                                                                            </BeginStoryboard>
                                                                                                                        </EventTrigger>
                                                                                                                    </ControlTemplate.Triggers>
                                                                                                                </ControlTemplate>
                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </Thumb.Style>
                                                                                            </Thumb>
                                                                                        </Track.Thumb>
                                                                                    </Track>
                                                                                </interactivity:SimplePanel>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ScrollBar.Style>
                                                </ScrollBar>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="True" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>


            <!--<Storyboard x:Key="Closing">
                <DoubleAnimation Duration="0:0:1" From="1" To="0" Storyboard.Target="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" Storyboard.TargetProperty="Opacity" ></DoubleAnimation>
            </Storyboard>-->

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Application.Resources>
</Application>